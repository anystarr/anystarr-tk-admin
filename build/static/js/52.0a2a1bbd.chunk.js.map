{"version":3,"sources":["views/Invitecode/Invitecode.jsx","views/Invitecode/index.js","../node_modules/@ant-design/icons-svg/es/asn/MinusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/MinusCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/CheckCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/CheckCircleOutlined.js"],"names":["Option","MonthPicker","RangePicker","config","rules","type","required","message","searchLayout","label","value","map","option","index","key","labelCol","span","wrapperCol","SearchBar","props","useForm","form","name","className","onFinish","values","changeSearch","gutter","Item","style","textAlign","htmlType","loading","margin","onClick","resetFields","DownloadModal","visible","onCreate","onCancel","formData","disabled","title","okText","cancelText","onOk","validateFields","then","catch","info","console","log","showTime","format","DetailModal","useState","useEffect","Object","keys","length","setFieldsValue","SearchTableView","list","pagination","current","pageSize","search","aVisible","aFormData","bVisible","bFormData","dVisible","dFormData","state","setState","data","params","start_row","page_size","getList","APIGetInvitecodeList","invitation_code_json","JSON","stringify","resp","getKeyList","total","pager","err","begin_date","end_date","APIDownloadInvitecode","res","success","APICreateInvitecode","InvitationCodeJson","WebBreadcrumb","arr","src","Aset","marginBottom","marginLeft","marginRight","customRequest","file","onSuccess","APIBatchCreateInvitecode","columns","dataIndex","align","render","text","item","MinusCircleOutlined","color","fontSize","CheckCircleOutlined","width","HeaderC","display","bordered","rowKey","record","scroll","scrollToFirstRowOnChange","x","dataSource","onChange","Invitecode","ref","React","AntdIcon","assign","icon","MinusCircleOutlinedSvg","displayName","CheckCircleOutlinedSvg"],"mappings":"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","file":"static/js/52.0a2a1bbd.chunk.js","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\nimport WebBreadcrumb from '@/components/WebBreadcrumb'\nimport { Layout, Row, Col, Tag, Table, Button, Modal, Input, Form, DatePicker, Select, message, Upload } from 'antd'\nimport '@/style/view-style/table.less'\nimport {\n    APIgetList,\n    APIrewardApplicationList,\n    APIrewardApplicationHandle,\n    APIexportRewardRecord,\n    APIGetUserList,\n    APIGetInvitecodeList,\n    APICreateInvitecode,\n    APIBatchCreateInvitecode,\n    APIDownloadInvitecode\n} from '@/mapi'\nimport { getKeyList } from '@/tools/action.js'\nimport moment from 'moment'\nimport Aset from '@/imgs/aset1.png'\nimport { MinusCircleOutlined, CheckCircleOutlined } from '@ant-design/icons'\nimport HeaderC from '@/components/HeaderC'\n\nconst { MonthPicker, RangePicker } = DatePicker\nconst { Option } = Select\n\nconst config = {\n    rules: [\n        {\n            type: 'object',\n            required: true,\n            message: 'Please select time!'\n        }\n    ]\n}\nconst typeList = [\n    { label: '待处理', value: 'to_handle' },\n    { label: '已处理', value: 'handled' }\n]\n\nconst TypeOptions = typeList.map((option, index) => {\n    return (\n        <Option key={index} value={option.value}>\n            {option.label}\n        </Option>\n    )\n})\n\nconst getLocalTime = nS => {\n    return new Date(parseInt(nS) * 1000).toLocaleString().replace(/:\\d{1,2}$/, ' ')\n}\n\nconst columns = () => [\n    {\n        title: '#',\n        dataIndex: 'index',\n        key: 'index',\n        align: 'center',\n        render: (text, item, index) => <span className='table-index'>{index}</span>\n    },\n    {\n        title: 'Invitation Code ID',\n        dataIndex: 'id',\n        key: 'id',\n        align: 'center',\n        render: (text, item) => <span className='table-id'>{text}</span>\n    },\n    {\n        title: 'Usage',\n        dataIndex: 'status',\n        key: 'status',\n        align: 'center',\n        render: (text, item) =>\n            // <span>{text == 1 ? 'NO' : 'Yes'}</span>\n            text == 1 ? (\n                <span className='table-row-no'>\n                    <MinusCircleOutlined style={{ color: '#f85c5a', fontSize: '13px', marginRight: '3px' }} />\n                    no\n                </span>\n            ) : (\n                <span className='table-row-yes'>\n                    <CheckCircleOutlined style={{ color: '#33d6bb', fontSize: '13px', marginRight: '3px' }} />\n                    yes\n                </span>\n            )\n    },\n    {\n        title: 'from',\n        dataIndex: 'type',\n        key: 'type',\n        align: 'center',\n        render: (text, item) => <span>{text == 1 ? 'emial' : text == 2 ? 'ins' : 'fb'}</span>\n    },\n    {\n        title: 'Invitation Code',\n        dataIndex: 'code',\n        key: 'code',\n        align: 'center'\n    },\n    {\n        title: 'User Name',\n        dataIndex: 'user_name',\n        key: 'user_name',\n        align: 'center'\n    },\n    {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email',\n        align: 'center'\n    },\n    {\n        title: 'Created by',\n        dataIndex: 'created_by',\n        key: 'created_by',\n        align: 'center',\n        render: (text, item) => (\n            <div style={{ width: '110px' }}>\n                <HeaderC name={text} style={{ display: 'inline-block' }} />\n                <span>{text}</span>\n            </div>\n        )\n    },\n    {\n        title: 'Created time',\n        dataIndex: 'create_time',\n        key: 'create_time',\n        align: 'center'\n        // render: (text, item) => <span>{new Date(text).toLocaleString()}</span>\n    }\n]\n\nconst searchLayout = {\n    labelCol: {\n        span: 8\n    },\n    wrapperCol: {\n        span: 16\n    }\n}\n\nconst SearchBar = props => {\n    const [form] = Form.useForm()\n\n    const onFinish = values => {\n        props.changeSearch(values)\n    }\n\n    return (\n        <Form\n            {...searchLayout}\n            form={form}\n            name='advanced_search'\n            className='ant-advanced-search-form'\n            onFinish={onFinish}>\n            <Row gutter={24}>\n                <Col span={8}>\n                    <Form.Item name='user_name' label='User name'>\n                        <Input />\n                    </Form.Item>\n                </Col>\n                <Col span={8}>\n                    <Form.Item name='invite_code' label='Invitation Code'>\n                        <Input />\n                    </Form.Item>\n                </Col>\n                <Col span={8}>\n                    <Form.Item name='email' label='Email'>\n                        <Input />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={24} style={{ textAlign: 'right' }}>\n                    <Button type='primary' htmlType='submit' loading={props.loading}>\n                        Search\n                    </Button>\n                    <Button\n                        style={{ margin: '0 8px' }}\n                        onClick={() => {\n                            form.resetFields()\n                        }}>\n                        Reset\n                    </Button>\n                </Col>\n            </Row>\n        </Form>\n    )\n}\n\nconst DownloadModal = ({ visible, onCreate, onCancel, formData, disabled }) => {\n    const [form] = Form.useForm()\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 14 }\n    }\n    const rangeConfig = {\n        rules: [\n            {\n                type: 'array',\n                message: 'Please select time!'\n            }\n        ]\n    }\n\n    return (\n        <Modal\n            visible={visible}\n            title='download '\n            okText='Submit'\n            cancelText='Cancel'\n            onCancel={onCancel}\n            onOk={() => {\n                form.validateFields()\n                    .then(values => {\n                        form.resetFields()\n                        onCreate(values)\n                    })\n                    .catch(info => {\n                        console.log('Validate Failed:', info)\n                    })\n            }}>\n            <Form {...layout} form={form} name='form_in_modal'>\n                <Form.Item label='User Name' name='user_name'>\n                    <Input />\n                </Form.Item>\n                <Form.Item label='Type' name='type'>\n                    <Select>\n                        <Option value={1}>Email</Option>\n                        <Option value={2}>Ins</Option>\n                        <Option value={3}>facebook</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item name='begin_date' label='Begin Time' {...config}>\n                    <DatePicker showTime format='YYYY-MM-DD HH:mm:ss' />\n                </Form.Item>\n                <Form.Item name='end_date' label='End Time' {...config}>\n                    <DatePicker showTime format='YYYY-MM-DD HH:mm:ss' />\n                </Form.Item>\n            </Form>\n        </Modal>\n    )\n}\n\nconst DetailModal = ({ visible, onCreate, onCancel, formData, disabled }) => {\n    const [form] = Form.useForm()\n\n    const [user, setUser] = useState({})\n    const [allMemVisible, setAllMemVisible] = useState(false)\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 14 }\n    }\n    const rangeConfig = {\n        rules: [\n            {\n                type: 'array',\n                message: 'Please select time!'\n            }\n        ]\n    }\n\n    useEffect(() => {\n        if (Object.keys(formData).length) {\n            form.setFieldsValue(formData)\n        } else {\n            form.resetFields()\n        }\n    }, [])\n\n    const onGenderChange = value => {\n        form.setFieldsValue({ Gender: value })\n    }\n\n    const onCreateNew = val => {\n        setUser(val)\n        setAllMemVisible(false)\n        form.setFieldsValue({\n            user_id: val.user_id\n        })\n    }\n\n    return (\n        <Modal\n            visible={visible}\n            title='Generate invitation code'\n            okText='Submit'\n            cancelText='Cancel'\n            onCancel={onCancel}\n            onOk={() => {\n                form.validateFields()\n                    .then(values => {\n                        form.resetFields()\n                        onCreate(values)\n                    })\n                    .catch(info => {\n                        console.log('Validate Failed:', info)\n                    })\n            }}>\n            <Form {...layout} form={form} name='form_in_modal'>\n                <Form.Item name='type' label='Type'>\n                    <Select>\n                        <Option value='email'>email</Option>\n                        <Option value='ins'>ins</Option>\n                        <Option value='fb'>fb</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item name='user_name' label='User Name' rules={[{ required: true }]}>\n                    <Input />\n                </Form.Item>\n            </Form>\n        </Modal>\n    )\n}\n\nconst SearchTableView = () => {\n    const [state, setState] = useState({\n        list: [],\n        pagination: {\n            current: 1,\n            pageSize: 10\n        },\n        search: {},\n        loading: true,\n        visible: false,\n        disabled: false,\n        formData: {},\n        aVisible: false,\n        aFormData: {},\n        bVisible: false,\n        bFormData: {},\n\n        dVisible: false,\n        dFormData: {}\n    })\n    const [handleState, setHandleState] = useState({\n        visible: false,\n        data: {}\n    })\n    useEffect(() => {\n        const { pagination } = state\n        const params = { start_row: 0, page_size: state.pagination.pageSize }\n        getList(params)\n    }, [])\n\n    const getList = params => {\n        console.log('params', params)\n        const { pagination, search } = state\n        setState({\n            ...state,\n            loading: true\n        })\n        APIGetInvitecodeList({ invitation_code_json: JSON.stringify(params) })\n            .then(resp => {\n                setState({\n                    ...state,\n                    visible: false,\n                    list: resp.data.list && getKeyList(resp.data.list),\n                    loading: false,\n                    pagination: {\n                        // ...state.pagination,\n                        total: resp.data.pager.total\n                    }\n                })\n            })\n            .catch(err => {\n                console.log('err', err)\n            })\n    }\n\n    const handleChange = pagination => {\n        const params = {\n            ...state.search,\n            page_size: pagination.pageSize,\n            start_row: pagination.pageSize * (pagination.current - 1)\n        }\n        getList(params)\n    }\n\n    const changeSearch = search => {\n        const params = { ...search, page_size: state.pagination.pageSize, start_row: 0 }\n        setState({\n            ...state,\n            ...search\n        })\n        getList(params)\n    }\n\n    const exportRecord = () => {\n        APIexportRewardRecord()\n            .then(xhr => {\n                return\n            })\n            .catch((err, status, xhr) => {})\n    }\n\n    const createInvitecode = () => {\n        setState({\n            ...state,\n            formData: {},\n            visible: true\n        })\n    }\n    const onCreate = data => {\n        console.log('data', data)\n        APICreateInvitecode({\n            InvitationCodeJson: JSON.stringify(data)\n        })\n            .then(resp => {\n                message.success('success')\n                const params = { ...state.search }\n                // setState({\n                //     ...state,\n                //     visible: false\n                // })\n                getList(params)\n            })\n            .catch(err => {\n                console.log('err', err)\n            })\n    }\n\n    const onCreateDownload = values => {\n        console.log('values', values)\n\n        let params = {\n            ...values,\n            begin_date: values['begin_date'].format('YYYY-MM-DD HH:mm:ss'),\n            end_date: values['end_date'].format('YYYY-MM-DD HH:mm:ss')\n        }\n        APIDownloadInvitecode({\n            invitation_code_json: JSON.stringify(params)\n        }).then(res => {\n            message.success('success')\n            setState({\n                ...state,\n                dVisible: false\n            })\n        })\n    }\n\n    const createInvitecodeNew = () => {}\n\n    const batchCreateInvitecode = () => {}\n\n    const batchUploadFile = ({ file, onSuccess }) => {\n        APIBatchCreateInvitecode({ file, file }).then(resp => {\n            onSuccess()\n            const params = { start_row: 0, page_size: state.pagination.pageSize }\n            getList(params)\n        })\n    }\n\n    const downloadInvitecode = () => {\n        setState({\n            dVisible: true\n        })\n    }\n\n    const rowSelection = {\n        onChange: (selectedRowKeys, selectedRows) => {\n            console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\n        },\n        getCheckboxProps: record => ({\n            disabled: record.name === 'Disabled User',\n            name: record.name\n        })\n    }\n\n    return (\n        <Layout className='animated fadeIn'>\n            <DownloadModal\n                visible={state.dVisible}\n                onCreate={onCreateDownload}\n                onCancel={() => {\n                    setState({ ...state, dVisible: false })\n                }}\n                formData={state.formData}\n            />\n\n            <DetailModal\n                visible={state.visible}\n                onCreate={onCreate}\n                onCancel={() => {\n                    setState({ ...state, visible: false })\n                }}\n                formData={state.formData}\n                disabled={state.disabled}\n            />\n            {/* <div>\n                <WebBreadcrumb arr={['Invitation Management']} />\n            </div> */}\n            <div className='web-bread-c'>\n                <WebBreadcrumb arr={['Invitation Code List']} />\n                <h3>Invitation Code List</h3>\n                <img src={Aset} className='aset' />\n            </div>\n            <div className='base-wr'>\n                <div className='base-style'>\n                    <SearchBar changeSearch={changeSearch} loading={state.loading} />\n                </div>\n                <Row>\n                    <Col span={24}>\n                        <div className='base-style'>\n                            <Row>\n                                <Col span={24} style={{ textAlign: 'right', marginBottom: '15px' }}>\n                                    <Button style={{ marginLeft: '10px' }} type='primary' onClick={downloadInvitecode}>\n                                        Download invitation code\n                                    </Button>\n                                    <Button\n                                        style={{ marginRight: '10px', marginLeft: '10px' }}\n                                        type='primary'\n                                        onClick={() => {\n                                            createInvitecode()\n                                        }}>\n                                        Generate invitation code\n                                    </Button>\n                                    <Upload customRequest={batchUploadFile}>\n                                        <Button type='primary'> Generate a batch of invitation code</Button>\n                                    </Upload>\n                                </Col>\n                            </Row>\n                            <Table\n                                columns={columns()}\n                                bordered\n                                rowKey={record => record.key}\n                                // rowSelection={{\n                                //     type: 'checkbox',\n                                //     ...rowSelection\n                                // }}\n                                scroll={{ scrollToFirstRowOnChange: true, x: 1000 }}\n                                dataSource={state.list}\n                                onChange={handleChange}\n                                loading={state.loading}\n                                pagination={state.pagination}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        </Layout>\n    )\n}\n\nexport default SearchTableView\n","import Invitecode from './Invitecode.jsx'\n\nexport default Invitecode","// This icon file is generated automatically.\nvar MinusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"minus-circle\", \"theme\": \"outlined\" };\nexport default MinusCircleOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MinusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MinusCircleOutlined = function MinusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: MinusCircleOutlinedSvg\n  }));\n};\n\nMinusCircleOutlined.displayName = 'MinusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(MinusCircleOutlined);","// This icon file is generated automatically.\nvar CheckCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0051.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"check-circle\", \"theme\": \"outlined\" };\nexport default CheckCircleOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CheckCircleOutlined = function CheckCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CheckCircleOutlinedSvg\n  }));\n};\n\nCheckCircleOutlined.displayName = 'CheckCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(CheckCircleOutlined);"],"sourceRoot":""}