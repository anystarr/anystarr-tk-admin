{"version":3,"sources":["views/SampleApplication/SampleApplication.jsx","views/SampleApplication/index.js"],"names":["RangePicker","MonthPicker","Option","formItemLayout","label","value","map","option","index","key","labelCol","xs","span","sm","wrapperCol","columns","edit","changeShow","confirm","title","dataIndex","align","render","text","item","className","onClick","FormOutlined","style","marginLeft","width","status","href","target","SearchBar","props","useForm","form","name","onFinish","values","console","log","changeSearch","gutter","Item","allowClear","ranges","Today","moment","Yesterday","subtract","placeholder","textAlign","type","htmlType","loading","margin","resetFields","DetailModal","visible","onCreate","onCancel","formData","disabled","useState","useEffect","Object","keys","length","setFieldsValue","okText","cancelText","onOk","validateFields","then","catch","info","rules","required","SearchTableView","list","pagination","current","pageSize","search","state","setState","data","params","start_row","page_size","getList","time","start_time","getYearMonthDayNormal","_d","end_time","campaign_ids","resCam","split","JSON","parse","APIGetSampleList","sampleOrderJson","stringify","resp","getKeyList","total","pager","err","is_show_app","APICreateOrModifySku","categoryJson","success","WebBreadcrumb","arr","src","Aset","alt","marginBottom","customRequest","file","onSuccess","APIUploadBatchApprovalSample","display","APIUploadTrackNumber","backgroundColor","color","padding","apiHref","APIDownloadSample","json","resHref","encodeURI","downloadSample","rowSelection","url","webhost","id","window","open","focus","rowKey","record","dataSource","onChange","bordered","size","scroll","scrollToFirstRowOnChange","x","SampleApplication"],"mappings":"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","file":"static/js/59.e3561abd.chunk.js","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\nimport WebBreadcrumb from '@/components/WebBreadcrumb'\nimport {\n    Layout,\n    Row,\n    Col,\n    Tag,\n    Table,\n    Button,\n    Modal,\n    Input,\n    Popconfirm,\n    Form,\n    DatePicker,\n    Select,\n    message,\n    Switch,\n    Badge,\n    Tooltip,\n    Upload\n} from 'antd'\nimport '@/style/view-style/table.less'\nimport {\n    APIgetList,\n    APIrewardApplicationList,\n    APIrewardApplicationHandle,\n    APIexportRewardRecord,\n    APIGetUserList,\n    APIGetInvitecodeList,\n    APICreateInvitecode,\n    APIGetCampaignsList,\n    APIFindTasks,\n    APIGetSkuList,\n    APICreateOrModifySku,\n    APIDeleteSku,\n    APIGetSampleList,\n    APIDownloadSample,\n    APIUploadTrackNumber,\n    APIUploadBatchApprovalSample\n} from '@/mapi'\nimport { getKeyList } from '@/tools/action.js'\nimport { getLendTime, getLendTimeNew, getYearMonthDayNormal } from '@/tools/help.js'\nimport { render } from 'react-dom'\nimport { search } from '../../tools/host'\nimport webhost from '@/tools/webhost.js'\nimport moment from 'moment'\nimport Aset from '@/imgs/aset1.png'\nimport { FormOutlined, MinusCircleOutlined, CheckCircleOutlined, PushpinOutlined } from '@ant-design/icons'\n\nconst { MonthPicker, RangePicker } = DatePicker\nconst { Option } = Select\n\nconst typeList = [\n    { label: '待处理', value: 'to_handle' },\n    { label: '已处理', value: 'handled' }\n]\n\nconst TypeOptions = typeList.map((option, index) => {\n    return (\n        <Option key={index} value={option.value}>\n            {option.label}\n        </Option>\n    )\n})\n\nconst getLocalTime = nS => {\n    return new Date(parseInt(nS) * 1000).toLocaleString().replace(/:\\d{1,2}$/, ' ')\n}\n\nconst formItemLayout = {\n    labelCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 8\n        }\n    },\n    wrapperCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 16\n        }\n    }\n}\n\nconst columns = (edit, changeShow, confirm) => [\n    {\n        title: 'Action',\n        dataIndex: 'action',\n        key: 'action',\n        align: 'center',\n        render: (text, item) => (\n            <a\n                className='action-btn'\n                onClick={() => {\n                    edit(item)\n                }}>\n                <FormOutlined />\n                <span style={{ marginLeft: '4px' }}>Edit</span>\n            </a>\n        )\n    },\n    {\n        title: ' Application ID',\n        dataIndex: 'id',\n        key: 'id',\n        width: '101',\n        align: 'center',\n        render: (text, item) => <span className='table-id'>{text}</span>\n    },\n    {\n        title: 'Task ID',\n        dataIndex: 'task_id',\n        key: 'task_id',\n        align: 'center',\n        width: '100'\n    },\n    {\n        title: 'Campaign ID',\n        dataIndex: 'campaign_id',\n        key: 'campaign_id',\n        align: 'center',\n        width: '100'\n    },\n    {\n        title: 'Campaign title',\n        dataIndex: 'title',\n        key: 'title',\n        align: 'center',\n        render: (text, item) => (\n            <Tooltip title={text}>\n                <div style={{ width: '300px' }}>{text}</div>\n            </Tooltip>\n        )\n    },\n    {\n        title: 'Application status',\n        dataIndex: 'status',\n        key: 'status',\n        width: 160,\n        align: 'center',\n        render: (text, item) => (\n            <div>\n                <Badge status={text == 4 ? 'default' : 'success'} />\n                <span>{text == 1 ? 'New application' : text == 4 ? 'Closed' : text == 3 ? 'Approved' : 'Shipped'}</span>\n            </div>\n        )\n    },\n    {\n        title: 'Update date',\n        dataIndex: 'update_time',\n        key: 'update_time',\n        align: 'center',\n        width: 180\n        // render: (text, item) => <div>{new Date(text).toLocaleString()}</div>\n    },\n    {\n        title: 'Username',\n        dataIndex: 'from_user',\n        key: 'from_user',\n        width: 100,\n        align: 'center'\n    },\n    {\n        title: 'Courier',\n        dataIndex: 'courier',\n        key: 'courier',\n        align: 'center'\n    },\n    {\n        title: 'Tracking number',\n        dataIndex: 'tracking_number',\n        key: 'tracking_number',\n        width: 100,\n        align: 'center',\n        render: (text, item) => (\n            <a href={`https://www.ydhex.com/tools/inquire?number=${text}`} target='_blank'>\n                {text}\n            </a>\n        )\n    }\n]\n\nconst SearchBar = props => {\n    const [form] = Form.useForm()\n\n    const onFinish = values => {\n        console.log('values', values)\n        props.changeSearch(values)\n    }\n\n    return (\n        <Form\n            {...formItemLayout}\n            form={form}\n            name='advanced_search'\n            className='ant-advanced-search-form'\n            onFinish={onFinish}>\n            <Row gutter={24}>\n                <Col span={10}>\n                    <Form.Item name='id' label='ID'>\n                        <Input />\n                    </Form.Item>\n                </Col>\n                <Col span={10}>\n                    <Form.Item name='user_id' label='User ID'>\n                        <Input />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row gutter={24}>\n                <Col span={10}>\n                    <Form.Item name='from_user' label='User Email'>\n                        <Input />\n                    </Form.Item>\n                </Col>\n                <Col span={10}>\n                    <Form.Item name='tracking_number' label='Tracking Number'>\n                        <Input />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row gutter={24}>\n                <Col span={10}>\n                    <Form.Item name='status' label='Application status'>\n                        <Select allowClear>\n                            <Option value={1}>New application</Option>\n                            <Option value={2}>Shipped</Option>\n                            <Option value={3}>Approved</Option>\n                            <Option value={4}>Closed</Option>\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col span={10}>\n                    <Form.Item name='time' label='time'>\n                        <RangePicker\n                            ranges={{\n                                Today: [moment(), moment()],\n                                Yesterday: [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\n                                'Last 7 days': [moment().subtract(6, 'days'), moment()],\n                                'Last 28 days': [moment().subtract(27, 'days'), moment()]\n                            }}\n                        />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={10}>\n                    <Form.Item name='campaign_ids' label='Campaign IDs'>\n                        <Input placeholder='Separated by English commas' />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={24} style={{ textAlign: 'right' }}>\n                    <Button type='primary' htmlType='submit' loading={props.loading}>\n                        Search\n                    </Button>\n                    <Button\n                        style={{ margin: '0 8px' }}\n                        onClick={() => {\n                            form.resetFields()\n                        }}>\n                        Reset\n                    </Button>\n                </Col>\n            </Row>\n        </Form>\n    )\n}\n\nconst DetailModal = ({ visible, onCreate, onCancel, formData, disabled }) => {\n    const [form] = Form.useForm()\n\n    const [user, setUser] = useState({})\n    const [allMemVisible, setAllMemVisible] = useState(false)\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 14 }\n    }\n    const rangeConfig = {\n        rules: [\n            {\n                type: 'array',\n                message: 'Please select time!'\n            }\n        ]\n    }\n\n    useEffect(() => {\n        console.log('formdata', formData)\n        if (Object.keys(formData).length) {\n            form.setFieldsValue(formData)\n        } else {\n            form.resetFields()\n        }\n    }, [formData])\n\n    const onGenderChange = value => {\n        form.setFieldsValue({ Gender: value })\n    }\n\n    const onCreateNew = val => {\n        setUser(val)\n        setAllMemVisible(false)\n        form.setFieldsValue({\n            user_id: val.user_id\n        })\n    }\n\n    return (\n        <Modal\n            visible={visible}\n            title='sku'\n            okText='Submit'\n            cancelText='Cancel'\n            onCancel={onCancel}\n            onOk={() => {\n                form.validateFields()\n                    .then(values => {\n                        form.resetFields()\n                        onCreate(values)\n                    })\n                    .catch(info => {\n                        console.log('Validate Failed:', info)\n                    })\n            }}>\n            <Form {...layout} form={form} name='form_in_modal'>\n                <Form.Item name='id' label='ID'>\n                    <Input disabled />\n                </Form.Item>\n                <Form.Item name='tier_1_cat' label='Tier1 Cat' rules={[{ required: true }]}>\n                    <Input />\n                </Form.Item>\n                <Form.Item name='tier_2_cat' label='Tier2 Cat'>\n                    <Input />\n                </Form.Item>\n                <Form.Item name='tier_3_cat' label='Tier3 Cat'>\n                    <Input />\n                </Form.Item>\n                <Form.Item name='shown_name' label='Sku name' rules={[{ required: true }]}>\n                    <Input />\n                </Form.Item>\n            </Form>\n        </Modal>\n    )\n}\n\nconst SearchTableView = props => {\n    const [state, setState] = useState({\n        list: [],\n        pagination: {\n            current: 1,\n            pageSize: 10\n        },\n        search: {},\n        loading: true,\n        visible: false,\n        disabled: false,\n        formData: {}\n    })\n    const [handleState, setHandleState] = useState({\n        visible: false,\n        data: {}\n    })\n    useEffect(() => {\n        const { pagination } = state\n        const params = { start_row: 0, page_size: state.pagination.pageSize }\n        getList(params)\n    }, [])\n\n    const getList = params => {\n        const { pagination, search } = state\n        setState({ ...state, loading: true })\n        if (params.time) {\n            params.start_time = getYearMonthDayNormal(params.time[0]._d)\n            params.end_time = getYearMonthDayNormal(params.time[1]._d)\n        }\n        console.log('params.campaign_ids', params.campaign_ids)\n        if (params.campaign_ids) {\n            let campaigIdArr = params.campaign_ids.split(',')\n            let resCam = campaigIdArr.map(item => {\n                return JSON.parse(item)\n            })\n            params.campaign_ids = resCam\n        }\n\n        APIGetSampleList({ sampleOrderJson: JSON.stringify(params) })\n            .then(resp => {\n                setState({\n                    ...state,\n                    visible: false,\n                    list: resp.data.list && getKeyList(resp.data.list),\n                    loading: false,\n                    search: params.search,\n                    pagination: {\n                        total: resp.data.pager.total,\n                        current: params.start_row / params.page_size + 1,\n                        pageSize: params.page_size\n                    }\n                })\n            })\n            .catch(err => {\n                console.log('err', err)\n            })\n    }\n\n    const handleChange = pagination => {\n        console.log('state', state)\n\n        const params = {\n            ...state.search,\n            page_size: pagination.pageSize,\n            start_row: pagination.pageSize * (pagination.current - 1),\n            search: state.search\n        }\n\n        console.log('ttt', params)\n\n        getList(params)\n    }\n\n    const changeSearch = search => {\n        const params = { ...search, page_size: 10, start_row: 0, search: search }\n        setState({\n            ...state,\n            search: search\n        })\n        getList(params)\n    }\n\n    const exportRecord = () => {\n        APIexportRewardRecord()\n            .then(xhr => {\n                return\n            })\n            .catch((err, status, xhr) => {})\n    }\n\n    const onCreate = data => {\n        console.log('data', data)\n        data.is_show_app = 1\n        APICreateOrModifySku({\n            categoryJson: JSON.stringify(data)\n        })\n            .then(resp => {\n                message.success('success')\n                const params = { ...state.search, start_row: 0, page_size: 10 }\n                getList(params)\n            })\n            .catch(err => {\n                console.log('err', err)\n            })\n    }\n\n    const createSku = data => {\n        setState({\n            ...state,\n            visible: true,\n            formData: {}\n        })\n    }\n\n    const edit = data => {\n        let url = webhost + '/sample_detail/' + data.id\n        let win = window.open(url, '_blank')\n        win.focus()\n    }\n\n    const confirm = data => {\n        console.log('dataconfirm', data)\n        APIDeleteSku({ id: data.id }).then(resp => {\n            const { pagination } = state\n            const params = { start_row: 0, page_size: state.pagination.pageSize }\n            getList(params)\n        })\n    }\n\n    const changeShow = data => {\n        console.log('data', data)\n        APICreateOrModifySku({\n            categoryJson: JSON.stringify({\n                id: data.id,\n                tier_1_cat: data.tier_1_cat,\n                shown_name: data.shown_name,\n                is_show_app: data.is_show_app == 1 ? 0 : 1\n            })\n        })\n            .then(resp => {\n                const params = {\n                    ...state.search,\n                    page_size: state.pagination.pageSize,\n                    start_row: state.pagination.pageSize * (state.pagination.current - 1),\n                    search: state.search\n                }\n                getList(params)\n            })\n            .catch(err => {\n                console.log('err', err)\n            })\n    }\n\n    const downloadSample = () => {\n        let apiHref = APIDownloadSample()\n        let params = { ...state.search }\n        if (params.campaign_ids) {\n            let campaigIdArr = params.campaign_ids.split(',')\n            let resCam = campaigIdArr.map(item => {\n                return JSON.parse(item)\n            })\n            params.campaign_ids = resCam\n        }\n        let json = JSON.stringify(params)\n        let resHref = `${apiHref}?sampleOrderJson=${json}`\n        console.log('resHref', resHref)\n        return encodeURI(resHref)\n    }\n\n    const rowSelection = () => {}\n\n    const uploadFile = ({ file, onSuccess }) => {\n        APIUploadTrackNumber({ file: file }).then(resp => {\n            onSuccess()\n            const params = { start_row: 0, page_size: state.pagination.pageSize }\n            getList(params)\n        })\n    }\n\n    const uploadSampleResult = ({ file, onSuccess }) => {\n        APIUploadBatchApprovalSample({ file: file }).then(resp => {\n            onSuccess()\n            const params = { start_row: 0, page_size: state.pagination.pageSize }\n            getList(params)\n        })\n    }\n\n    return (\n        <Layout className='animated fadeIn'>\n            <DetailModal\n                visible={state.visible}\n                onCreate={onCreate}\n                onCancel={() => {\n                    setState({ ...state, visible: false })\n                }}\n                formData={state.formData}\n                disabled={state.disabled}\n            />\n            <div className='web-bread-c'>\n                <WebBreadcrumb arr={['Sample application List']} />\n                <h3>Sample application List</h3>\n                <img src={Aset} className='aset' alt='aset' />\n            </div>\n            <div className='base-wr'>\n                <div className='base-style'>\n                    <SearchBar changeSearch={changeSearch} loading={state.loading} />\n                </div>\n                <Row>\n                    <Col span={24}>\n                        <div className='base-style'>\n                            <Row>\n                                <Col span={24} style={{ textAlign: 'right', marginBottom: '15px' }}>\n                                    <Upload customRequest={uploadSampleResult}>\n                                        <Button type='primary'>Upload sample result</Button>\n                                    </Upload>\n                                    <div style={{ marginLeft: '10px', display: 'inline-block' }}>\n                                        <Upload customRequest={uploadFile}>\n                                            <Button type='primary'> Upload tracking number</Button>\n                                        </Upload>\n                                    </div>\n                                    <a\n                                        style={{\n                                            backgroundColor: '#1890ff',\n                                            color: '#fff',\n                                            padding: '8px 15px',\n                                            marginLeft: '10px'\n                                        }}\n                                        href={downloadSample()}\n                                        type='download'>\n                                        Download\n                                    </a>\n                                </Col>\n                            </Row>\n                            <Table\n                                rowSelection={{\n                                    type: 'checkbox',\n                                    ...rowSelection\n                                }}\n                                columns={columns(edit, changeShow, confirm)}\n                                rowKey={record => record.key}\n                                dataSource={state.list}\n                                onChange={handleChange}\n                                bordered\n                                size='small'\n                                loading={state.loading}\n                                pagination={state.pagination}\n                                scroll={{ scrollToFirstRowOnChange: true, x: 1000 }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        </Layout>\n    )\n}\n\nexport default SearchTableView\n","import SampleApplication from './SampleApplication.jsx'\n\nexport default SampleApplication"],"sourceRoot":""}