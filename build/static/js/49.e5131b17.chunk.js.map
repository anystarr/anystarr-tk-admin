{"version":3,"sources":["views/ModifyPwd/ModifyPwd.jsx","views/ModifyPwd/index.js"],"names":["layout","labelCol","span","wrapperCol","tailLayout","offset","ModifyPwd","className","WebBreadcrumb","arr","id","name","initialValues","remember","onFinish","values","console","log","APImodifyPwd","crmUserJson","JSON","stringify","then","resp","success","catch","err","onFinishFailed","errorInfo","Item","label","rules","required","Password","getFieldValue","validator","rule","value","Promise","reject","resolve","type","htmlType"],"mappings":"4VAMMA,EAAS,CACXC,SAAU,CACNC,KAAM,GAEVC,WAAY,CACRD,KAAM,KAGRE,EAAa,CACfD,WAAY,CACRE,OAAQ,EACRH,KAAM,KAmGCI,EA/FG,WAoBd,OACI,uBAAQC,UAAU,yBACd,6BACI,kBAACC,EAAA,EAAD,CAAeC,IAAK,CAAC,sBAEzB,yBAAKF,UAAU,aAAaG,GAAG,YAC3B,2BACI,uBAAKR,KAAM,IACP,uCACQF,EADR,CAEIW,KAAK,QACLC,cAAe,CACXC,UAAU,GAEdC,SAjCP,SAAAC,GACbC,QAAQC,IAAI,WAAYF,GACxBG,aAAa,CACTC,YAAYC,KAAKC,UAAL,eACLN,MAGRO,MAAK,SAAAC,GACAP,QAAQC,IAAI,OAAQM,GACpB,IAAQC,QAAQ,cAEnBC,OAAM,SAAAC,GACHV,QAAQC,IAAI,MAAOS,OAsBPC,eAlBD,SAAAC,GACnBZ,QAAQC,IAAI,UAAWW,MAkBH,sBAAMC,KAAN,CACIC,MAAM,eACNnB,KAAK,WACLoB,MAAO,CACH,CACIC,UAAU,KAGlB,sBAAOC,SAAP,OAGJ,sBAAMJ,KAAN,CACIC,MAAM,eACNnB,KAAK,eACLoB,MAAO,CACH,CACIC,UAAU,KAGlB,sBAAOC,SAAP,OAGJ,sBAAMJ,KAAN,CACIC,MAAM,qBACNnB,KAAK,mBACLoB,MAAO,CACH,CACIC,UAAU,GAEd,gBAAGE,EAAH,EAAGA,cAAH,MAAwB,CACpBC,UADoB,SACVC,EAAMC,GAChB,OAAKA,GAASH,EAAc,kBAAoBG,EAIzCC,QAAQC,OACX,oDAJOD,QAAQE,eAU3B,sBAAOP,SAAP,OAGJ,sBAAMJ,KAASzB,EACX,uBAAQqC,KAAK,UAAUC,SAAS,UAAhC,WAMZ,uBAAKxC,KAAM,SC3GhBI,a","file":"static/js/49.e5131b17.chunk.js","sourcesContent":["import React from 'react'\nimport { Layout, Row, Col, Divider, Select, Form, Input, Button, Checkbox, message } from 'antd'\nimport WebBreadcrumb from '@/components/WebBreadcrumb'\nimport '@/style/view-style/index.less'\nimport { APImodifyPwd } from '@/mapi'\n\nconst layout = {\n    labelCol: {\n        span: 8\n    },\n    wrapperCol: {\n        span: 16\n    }\n}\nconst tailLayout = {\n    wrapperCol: {\n        offset: 8,\n        span: 16\n    }\n}\n\nconst ModifyPwd = () => {\n    const onFinish = values => {\n        console.log('Success:', values)\n        APImodifyPwd({\n            crmUserJson:JSON.stringify({\n                ...values\n            })\n\n        }).then(resp => {\n                console.log('resp', resp)\n                message.success('success')\n            })\n            .catch(err => {\n                console.log('err', err)\n            })\n    }\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo)\n    }\n    return (\n        <Layout className='index animated fadeIn'>\n            <div>\n                <WebBreadcrumb arr={['change password']} />\n            </div>\n            <div className='base-style' id='demoline'>\n                <Row>\n                    <Col span={12}>\n                        <Form\n                            {...layout}\n                            name='basic'\n                            initialValues={{\n                                remember: true\n                            }}\n                            onFinish={onFinish}\n                            onFinishFailed={onFinishFailed}>\n                            <Form.Item\n                                label='Old password'\n                                name='password'\n                                rules={[\n                                    {\n                                        required: true,\n                                    }\n                                ]}>\n                                <Input.Password />\n                            </Form.Item>\n\n                            <Form.Item\n                                label='New password'\n                                name='new_password'\n                                rules={[\n                                    {\n                                        required: true,\n                                    }\n                                ]}>\n                                <Input.Password />\n                            </Form.Item>\n\n                            <Form.Item\n                                label='New password again'\n                                name='confirm_password'\n                                rules={[\n                                    {\n                                        required: true,\n                                    },\n                                    ({ getFieldValue }) => ({\n                                        validator(rule, value) {\n                                        if (!value || getFieldValue('new_password') === value) {\n                                            return Promise.resolve()\n                                        }\n\n                                        return Promise.reject(\n                                            'The two passwords that you entered do not match!'\n                                            // getValue('register.passwordConfirmRegx',language)\n                                        )\n                                        },\n                                    }),\n                                ]}>\n                                <Input.Password />\n                            </Form.Item>\n\n                            <Form.Item {...tailLayout}>\n                                <Button type='primary' htmlType='submit'>\n                                    Save\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                    <Col span={12}></Col>\n                </Row>\n            </div>\n        </Layout>\n    )\n}\n\nexport default ModifyPwd\n","import ModifyPwd from './ModifyPwd.jsx'\n\nexport default ModifyPwd\n"],"sourceRoot":""}