{"version":3,"sources":["views/Campaigns/Campaigns.jsx","views/Campaigns/index.js","../node_modules/@ant-design/icons-svg/es/asn/MinusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/MinusCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/CheckCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/CheckCircleOutlined.js","components/WebBreadcrumbNew/WebBreadcrumbNew.jsx","components/WebBreadcrumbNew/index.js"],"names":["Option","MonthPicker","RangePicker","columns","label","value","map","option","index","key","edit","rtfEdit","title","dataIndex","width","align","render","text","item","className","onClick","FormOutlined","style","marginLeft","PushpinOutlined","color","fontSize","marginRight","display","JSON","parse","url","href","target","src","status","HeaderC","name","language","MinusCircleOutlined","CheckCircleOutlined","tag","toUpperCase","merchant","maxHeight","overflow","searchLayout","labelCol","span","wrapperCol","SearchBar","props","useForm","form","useState","onFinish","values","changeSearch","gutter","Item","allowClear","textAlign","type","htmlType","loading","margin","resetFields","DetailModal","visible","onCreate","onCancel","formData","disabled","editorState","BraftEditor","createEditorState","outputHTML","state","setState","useEffect","console","log","campaignId","id","APIGetCampaignContent","then","resp","data","Campaign_content","okText","cancelText","onOk","validateFields","campaign_content","catch","info","rules","required","onChange","prevState","toHTML","SearchTableView","list","pagination","current","pageSize","search","params","start_row","page_size","getList","APIGetCampaignsList","campaignJson","stringify","getCleanedParams","getKeyList","total","pager","err","APIModifyCampaignContent","content","success","WebBreadcrumbNew","marginBottom","history","push","pathname","query","sessionStorage","setItem","is_new_campaign","webhost","window","open","focus","expandable","expandedRowRender","dataSource","childCampaignList","bordered","rowKey","record","size","scroll","scrollToFirstRowOnChange","x","Campaigns","ref","React","AntdIcon","Object","assign","icon","MinusCircleOutlinedSvg","displayName","CheckCircleOutlinedSvg","WebBreadcrumb","arr","Aset","alt"],"mappings":"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","file":"static/js/46.dbf23022.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n    Layout,\n    Row,\n    Col,\n    Tag,\n    Table,\n    Button,\n    Modal,\n    Input,\n    Form,\n    DatePicker,\n    Select,\n    message,\n    Badge,\n    Image,\n    Tooltip,\n    Tabs\n} from 'antd'\nimport '@/style/view-style/table.less'\nimport {\n    APIgetList,\n    APIrewardApplicationList,\n    APIrewardApplicationHandle,\n    APIexportRewardRecord,\n    APIGetUserList,\n    APIGetInvitecodeList,\n    APICreateInvitecode,\n    APIGetCampaignsList,\n    APIModifyCampaignContent,\n    APIGetCampaignContent\n} from '@/mapi'\nimport { getKeyList } from '@/tools/action.js'\nimport { render } from 'react-dom'\nimport { getYearMonthDayTimeNew, getCleanedParams } from '@/tools/help.js'\nimport Aset from '@/imgs/aset1.png'\nimport WebBreadcrumbNew from '@/components/WebBreadcrumbNew'\nimport webhost from '@/tools/webhost.js'\nimport { FormOutlined, MinusCircleOutlined, CheckCircleOutlined, PushpinOutlined } from '@ant-design/icons'\nimport HeaderC from '@/components/HeaderC'\nimport BraftEditor from 'braft-editor'\nimport 'braft-editor/dist/index.css'\n\nconst { MonthPicker, RangePicker } = DatePicker\nconst { Option } = Select\n\nconst typeList = [\n    { label: '待处理', value: 'to_handle' },\n    { label: '已处理', value: 'handled' }\n]\n\nconst TypeOptions = typeList.map((option, index) => {\n    return (\n        <Option key={index} value={option.value}>\n            {option.label}\n        </Option>\n    )\n})\n\nconst columns = (edit, rtfEdit) => [\n    {\n        title: 'Action',\n        dataIndex: 'edit',\n        key: 'edit',\n        width: 100,\n        align: 'center',\n        render: (text, item) => (\n            <>\n                <a\n                    className='action-btn'\n                    onClick={() => {\n                        edit(item)\n                    }}>\n                    <FormOutlined />\n                    <span style={{ marginLeft: '4px' }}>Edit</span>\n                </a>\n                <a\n                    className='action-btn'\n                    onClick={() => {\n                        rtfEdit(item)\n                    }}>\n                    <FormOutlined />\n                    <span style={{ marginLeft: '4px' }}>Ref Edit</span>\n                </a>\n            </>\n        )\n    },\n    {\n        title: 'Campaign ID',\n        dataIndex: 'id',\n        key: 'id',\n        width: 100,\n        align: 'center',\n        render: (text, item) => <span className='table-id'>{text}</span>\n    },\n    {\n        title: 'Campaign title',\n        dataIndex: 'title',\n        key: 'title',\n        align: 'center',\n        render: (text, item) => (\n            <Tooltip title={text}>\n                <div style={{ width: '300px' }}>{text}</div>\n            </Tooltip>\n        )\n    },\n    {\n        title: 'Language',\n        dataIndex: 'language',\n        key: 'language',\n        align: 'center',\n        render: (text, item) => (\n            <span>\n                {text == 1\n                    ? 'English'\n                    : text == 2\n                    ? 'French'\n                    : text == 3\n                    ? 'Spanish'\n                    : text == 4\n                    ? 'Polish'\n                    : text == 5\n                    ? 'Portuguese'\n                    : ''}\n            </span>\n        )\n    },\n    {\n        title: 'Campaign type',\n        dataIndex: 'type',\n        key: 'type',\n        align: 'center',\n        render: (text, item) =>\n            text == 1 ? (\n                <span className='table-row-p'>\n                    <PushpinOutlined style={{ color: '#868AF6', fontSize: '13px', marginRight: '3px' }} />\n                    CPA\n                </span>\n            ) : text == 3 ? (\n                <span className='table-row-green'>\n                    <PushpinOutlined style={{ color: '#18BFA4', fontSize: '13px', marginRight: '3px' }} />\n                    Branding\n                </span>\n            ) : text == 4 ? (\n                <span className='table-row-red'>\n                    <PushpinOutlined style={{ color: '#f85c5a', fontSize: '13px', marginRight: '3px' }} />\n                    abComo\n                </span>\n            ) : null\n    },\n    {\n        title: 'Banner',\n        dataIndex: 'banner',\n        key: 'banner',\n        align: 'center',\n        render: (text, item) => (\n            <div style={{ display: 'flex' }}>\n                {text &&\n                    JSON.parse(text).map((url, index) => {\n                        return (\n                            <a href={url} target='_blank'>\n                                <img src={url} key={index} className='table-img' />\n                            </a>\n                        )\n                    })}\n            </div>\n        )\n    },\n    {\n        title: 'Campaign status',\n        dataIndex: 'status',\n        key: 'status',\n        align: 'center',\n        render: (text, item) => (\n            <div style={{ width: '200px' }}>\n                <Badge\n                    status={\n                        text == 1 || text == 2 ? 'success' : text == 4 ? 'processing' : text == 0 ? 'error' : 'default'\n                    }\n                />\n                <span>\n                    {text == 0\n                        ? 'Campaign expired'\n                        : text == 1\n                        ? 'Campaign Posting'\n                        : text == 2\n                        ? 'Campaign Onging'\n                        : text == 3\n                        ? 'Campaign Created'\n                        : text == 4\n                        ? 'Campaign Draft'\n                        : text == 5\n                        ? 'Campaign on hold'\n                        : ''}\n                </span>\n            </div>\n        )\n    },\n    {\n        title: 'Created by',\n        dataIndex: 'created_by',\n        key: 'created_by',\n        align: 'center',\n        render: (text, item) => (\n            <div style={{ width: '150px' }}>\n                <HeaderC name={text} style={{ display: 'inline-block' }} />\n                <span>{text}</span>\n            </div>\n        )\n    },\n\n    {\n        title: 'Code left',\n        dataIndex: 'surplus_code_number',\n        key: 'surplus_code_number',\n        align: 'center',\n        render: (text, item) =>\n            text < 10 && item.language == 1 ? (\n                <span style={{ color: 'rgb(232,18,18)' }}>!{text}</span>\n            ) : (\n                <span>{text}</span>\n            )\n    },\n    {\n        title: 'With Sample',\n        dataIndex: 'with_sample',\n        key: 'with_sample',\n        width: '100',\n        align: 'center',\n        render: (text, item) =>\n            text == 1 ? (\n                <span className='table-row-no'>\n                    <MinusCircleOutlined style={{ color: '#f85c5a', fontSize: '13px', marginRight: '3px' }} />\n                    no\n                </span>\n            ) : (\n                <span className='table-row-yes'>\n                    <CheckCircleOutlined style={{ color: '#33d6bb', fontSize: '13px', marginRight: '3px' }} />\n                    yes\n                </span>\n            )\n    },\n    {\n        title: 'Pin',\n        dataIndex: 'set_top',\n        key: 'set_top',\n        align: 'center',\n        width: '100',\n        render: (text, item) =>\n            text == 1 ? (\n                <span className='table-row-no'>\n                    <MinusCircleOutlined style={{ color: '#f85c5a', fontSize: '13px', marginRight: '3px' }} />\n                    no\n                </span>\n            ) : (\n                <span className='table-row-yes'>\n                    <CheckCircleOutlined style={{ color: '#33d6bb', fontSize: '13px', marginRight: '3px' }} />\n                    yes\n                </span>\n            )\n    },\n    {\n        title: 'Country',\n        dataIndex: 'country_list',\n        key: 'country_list',\n        width: '100',\n        align: 'center',\n        render: (text, item) => (\n            <>\n                {text &&\n                    JSON.parse(text).map((tag, index) => (\n                        <span className='table-id-block' key={index}>\n                            {tag.toUpperCase()}\n                        </span>\n                    ))}\n            </>\n        )\n    },\n    {\n        title: 'Start',\n        dataIndex: 'start_time',\n        key: 'start_time',\n        align: 'center',\n        width: 170\n        // render: (text, item) => <div>{text ? getYearMonthDayTimeNew(text) : ''}</div>\n    },\n    {\n        title: 'End',\n        dataIndex: 'close_time',\n        key: 'close_time',\n        align: 'center',\n        width: 170\n        // render: (text, item) => <div>{text ? getYearMonthDayTimeNew(text) : ''}</div>\n    },\n    {\n        title: 'Merchant',\n        dataIndex: 'merchant_name',\n        key: 'merchant_name',\n        align: 'center',\n        width: 100,\n        render: (text, item) => (\n            <div>\n                <Image src={item.merchant} style={{ maxHeight: 60, overflow: 'hidden' }} />\n                <span>{text}</span>\n            </div>\n        )\n    }\n]\n\nconst searchLayout = {\n    labelCol: {\n        span: 8\n    },\n    wrapperCol: {\n        span: 16\n    }\n}\n\nconst SearchBar = props => {\n    const [form] = Form.useForm()\n\n    const onFinish = values => {\n        props.changeSearch(values)\n    }\n\n    const [language, setLanguage] = useState([\n        { name: 'English', value: 'English' },\n        { name: 'French', value: 'French' },\n        { name: 'Spanish', value: 'Spanish' },\n        { name: 'Polish', value: 'Polish' },\n        { name: 'Portuguese', value: 'Portuguese' }\n    ])\n\n    return (\n        <Form\n            {...searchLayout}\n            form={form}\n            name='advanced_search'\n            className='ant-advanced-search-form'\n            onFinish={onFinish}>\n            <Row gutter={24}>\n                <Col span={10}>\n                    <Form.Item name='title' label='Campaign title'>\n                        <Input />\n                    </Form.Item>\n                </Col>\n                <Col span={11}>\n                    <Form.Item name='status' label='Campaign status'>\n                        <Select allowClear>\n                            <Option value='0'>expired</Option>\n                            <Option value='1'>posting</Option>\n                            <Option value='2'>onging</Option>\n                            <Option value='3'>created</Option>\n                            <Option value='4'>draft</Option>\n                            <Option value='5'>on hold</Option>\n                        </Select>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row gutter={24}>\n                <Col span={10}>\n                    <Form.Item name='type' label='Campaign type'>\n                        <Select allowClear>\n                            <Option value='1'>CPA</Option>\n                            <Option value='3'>Branding</Option>\n                            <Option value='4'>abComo</Option>\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col span={11}>\n                    <Form.Item name='language' label='Campaign language'>\n                        <Select allowClear>\n                            {language.map(item => {\n                                return (\n                                    <Option key={item.value} value={item.name}>\n                                        {item.name}\n                                    </Option>\n                                )\n                            })}\n                        </Select>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={24} style={{ textAlign: 'right' }}>\n                    <Button type='primary' htmlType='submit' loading={props.loading}>\n                        Search\n                    </Button>\n                    <Button\n                        style={{ margin: '0 8px' }}\n                        onClick={() => {\n                            form.resetFields()\n                        }}>\n                        Reset\n                    </Button>\n                </Col>\n            </Row>\n        </Form>\n    )\n}\n\nconst DetailModal = ({ visible, onCreate, onCancel, formData, disabled }) => {\n    const [form] = Form.useForm()\n\n    const [state, setState] = useState({\n        editorState: BraftEditor.createEditorState(''),\n        outputHTML: ''\n    })\n\n    const layout = {\n        labelCol: { span: 3 },\n        wrapperCol: { span: 21 }\n    }\n    const rangeConfig = {\n        rules: [\n            {\n                type: 'array',\n                message: 'Please select time!'\n            }\n        ]\n    }\n\n    useEffect(() => {\n        // if (Object.keys(formData).length) {\n        //     form.setFieldsValue(formData)\n        // } else {\n        //     form.resetFields()\n        // }\n        console.log('formData', formData)\n        let campaignId = formData.id\n        if (campaignId) {\n            APIGetCampaignContent({ campaignId: campaignId }).then(resp => {\n                console.log('xixixix')\n                setState({\n                    ...state,\n                    editorState: BraftEditor.createEditorState(resp.data.Campaign_content)\n                })\n            })\n        }\n    }, [formData])\n\n    const editorChange = editorState => {\n        setState(prevState => {\n            return { ...prevState, editorState, outputHTML: editorState.toHTML() }\n        })\n    }\n\n    return (\n        <Modal\n            visible={visible}\n            title='Campaign content  rtf'\n            okText='Submit'\n            width={1100}\n            cancelText='Cancel'\n            onCancel={onCancel}\n            onOk={() => {\n                form.validateFields()\n                    .then(values => {\n                        form.resetFields()\n                        onCreate({\n                            id: formData.id,\n                            campaign_content: state.outputHTML\n                        })\n                    })\n                    .catch(info => {\n                        console.log('Validate Failed:', info)\n                    })\n            }}>\n            <Form {...layout} form={form} name='form_in_modal'>\n                <Form.Item label='Campaign Content' rules={[{ required: true }]}>\n                    <BraftEditor value={state.editorState} onChange={editorChange} />\n                </Form.Item>\n            </Form>\n        </Modal>\n    )\n}\n\nconst SearchTableView = props => {\n    const [state, setState] = useState({\n        list: [],\n        pagination: {\n            current: 1,\n            pageSize: 10\n        },\n        search: {},\n        loading: true,\n        visible: false,\n        disabled: false,\n        formData: {}\n    })\n    const [handleState, setHandleState] = useState({\n        visible: false,\n        data: {}\n    })\n    useEffect(() => {\n        const { pagination } = state\n        const params = { start_row: 0, page_size: state.pagination.pageSize }\n        getList(params)\n    }, [])\n\n    const getList = params => {\n        const { pagination, search } = state\n        console.log('params', params)\n        setState({\n            ...state,\n            loading: true\n        })\n        APIGetCampaignsList({ campaignJson: JSON.stringify(getCleanedParams(params)) })\n            .then(resp => {\n                setState({\n                    ...state,\n                    visible: false,\n                    list: resp.data.list && getKeyList(resp.data.list),\n                    loading: false,\n                    search: params.search,\n                    pagination: {\n                        // ...state.pagination,\n                        current: params.start_row / params.page_size + 1,\n                        pageSize: params.page_size,\n                        total: resp.data.pager.total\n                    }\n                })\n            })\n            .catch(err => {\n                console.log('err', err)\n            })\n    }\n\n    const handleChange = pagination => {\n        const params = {\n            ...state.search,\n            search: state.search,\n            page_size: pagination.pageSize,\n            start_row: pagination.pageSize * (pagination.current - 1)\n        }\n        console.log('changepaams', params)\n        getList(params)\n    }\n\n    const changeSearch = search => {\n        const params = { ...search, page_size: 10, start_row: 0, search }\n        getList(params)\n        // setState({\n        //     ...state,\n        //     ...search\n        // })\n    }\n\n    const exportRecord = () => {\n        APIexportRewardRecord()\n            .then(xhr => {\n                return\n            })\n            .catch((err, status, xhr) => {})\n    }\n\n    const onCreate = data => {\n        console.log('data....', data)\n        data.campaign_content =\n            \"<div style=' padding: 60px;background-color: #fff;color: #666;'>\" + data.campaign_content + '</div>'\n        APIModifyCampaignContent({\n            campaignId: data.id,\n            content: data.campaign_content\n        }).then(resp => {\n            message.success('success')\n            const params = { start_row: 0, page_size: state.pagination.pageSize }\n            getList(params)\n        })\n    }\n\n    const createCampaigns = () => {\n        props.history.push({\n            pathname: '/createCampaign/0',\n            query: {}\n        })\n        sessionStorage.setItem('query', JSON.stringify({}))\n    }\n\n    const createCampaignsNew = () => {\n        props.history.push({\n            pathname: '/createCampaignNew/0',\n            query: {}\n        })\n        sessionStorage.setItem('query', JSON.stringify({}))\n    }\n\n    const edit = data => {\n        let url\n        console.log('data.is_new_campaign', data.is_new_campaign)\n        if (data.is_new_campaign) {\n            url = webhost + '/createCampaignNew/' + data.id\n        } else {\n            url = webhost + '/createCampaign/' + data.id\n        }\n        var win = window.open(url, '_blank')\n        win.focus()\n    }\n\n    const rtfEdit = data => {\n        // data.campaign_content = \"<div style=' padding: 0 20px;background: #fff;'>\"+data.campaign_content+\"</div>\"\n        // console.log('datat',data)\n\n        setState({\n            ...state,\n            visible: true,\n            formData: data\n        })\n    }\n\n    const rowSelection = () => {}\n\n    const expandedRowRender = data => {\n        console.log('expandedRowRender', data)\n        const columns = edit => [\n            {\n                title: 'Action',\n                dataIndex: 'edit',\n                key: 'edit',\n                width: 100,\n                align: 'center',\n                render: (text, item) => (\n                    <a\n                        className='action-btn'\n                        onClick={() => {\n                            edit(item)\n                        }}>\n                        <FormOutlined />\n                        <span style={{ marginLeft: '4px' }}>Edit</span>\n                    </a>\n                )\n            },\n            {\n                title: 'Campaign ID',\n                dataIndex: 'id',\n                key: 'id',\n                width: 100,\n                align: 'center',\n                render: (text, item) => <span className='table-id'>{text}</span>\n            },\n            {\n                title: 'Campaign title',\n                dataIndex: 'title',\n                key: 'title',\n                align: 'center',\n                render: (text, item) => (\n                    <Tooltip title={text}>\n                        <div style={{ width: '300px' }}>{text}</div>\n                    </Tooltip>\n                )\n            },\n            {\n                title: 'Language',\n                dataIndex: 'language',\n                key: 'language',\n                align: 'center',\n                render: (text, item) => (\n                    <span>\n                        {text == 1\n                            ? 'English'\n                            : text == 2\n                            ? 'French'\n                            : text == 3\n                            ? 'Spanish'\n                            : text == 4\n                            ? 'Polish'\n                            : text == 5\n                            ? 'Portuguese'\n                            : ''}\n                    </span>\n                )\n            },\n            {\n                title: 'Campaign type',\n                dataIndex: 'type',\n                key: 'type',\n                align: 'center',\n                render: (text, item) =>\n                    text == 1 ? (\n                        <span className='table-row-p'>\n                            <PushpinOutlined style={{ color: '#868AF6', fontSize: '13px', marginRight: '3px' }} />\n                            CPA\n                        </span>\n                    ) : text == 3 ? (\n                        <span className='table-row-green'>\n                            <PushpinOutlined style={{ color: '#18BFA4', fontSize: '13px', marginRight: '3px' }} />\n                            Branding\n                        </span>\n                    ) : text == 4 ? (\n                        <span className='table-row-red'>\n                            <PushpinOutlined style={{ color: '#f85c5a', fontSize: '13px', marginRight: '3px' }} />\n                            abComo\n                        </span>\n                    ) : null\n            },\n            {\n                title: 'Banner',\n                dataIndex: 'banner',\n                key: 'banner',\n                align: 'center',\n                render: (text, item) => (\n                    <div style={{ display: 'flex' }}>\n                        {text &&\n                            JSON.parse(text).map((url, index) => {\n                                return (\n                                    <a href={url} target='_blank'>\n                                        <img src={url} key={index} style={{ width: '60px', marginLeft: '5px' }} />\n                                    </a>\n                                )\n                            })}\n                    </div>\n                )\n            },\n            {\n                title: 'Campaign status',\n                dataIndex: 'status',\n                key: 'status',\n                align: 'center',\n                render: (text, item) => (\n                    <div style={{ width: '200px' }}>\n                        <Badge\n                            status={\n                                text == 1 || text == 2\n                                    ? 'success'\n                                    : text == 4\n                                    ? 'processing'\n                                    : text == 0\n                                    ? 'error'\n                                    : 'default'\n                            }\n                        />\n                        <span>\n                            {text == 0\n                                ? 'Campaign expired'\n                                : text == 1\n                                ? 'Campaign Posting'\n                                : text == 2\n                                ? 'Campaign Onging'\n                                : text == 3\n                                ? 'Campaign Created'\n                                : text == 4\n                                ? 'Campaign Draft'\n                                : text == 5\n                                ? 'Campaign on hold'\n                                : ''}\n                        </span>\n                    </div>\n                )\n            },\n            {\n                title: 'Created by',\n                dataIndex: 'created_by',\n                key: 'created_by',\n                align: 'center',\n                render: (text, item) => (\n                    <div style={{ width: '150px' }}>\n                        <HeaderC name={text} style={{ display: 'inline-block' }} />\n                        <span>{text}</span>\n                    </div>\n                )\n            },\n\n            {\n                title: 'Code left',\n                dataIndex: 'surplus_code_number',\n                key: 'surplus_code_number',\n                align: 'center',\n                render: (text, item) =>\n                    text < 10 && item.language == 1 ? (\n                        <span style={{ color: 'rgb(232,18,18)' }}>!{text}</span>\n                    ) : (\n                        <span>{text}</span>\n                    )\n            },\n            {\n                title: 'With Sample',\n                dataIndex: 'with_sample',\n                key: 'with_sample',\n                width: '100',\n                align: 'center',\n                render: (text, item) =>\n                    text == 1 ? (\n                        <span className='table-row-no'>\n                            <MinusCircleOutlined style={{ color: '#f85c5a', fontSize: '13px', marginRight: '3px' }} />\n                            no\n                        </span>\n                    ) : (\n                        <span className='table-row-yes'>\n                            <CheckCircleOutlined style={{ color: '#33d6bb', fontSize: '13px', marginRight: '3px' }} />\n                            yes\n                        </span>\n                    )\n            },\n            {\n                title: 'Pin',\n                dataIndex: 'set_top',\n                key: 'set_top',\n                align: 'center',\n                width: '100',\n                render: (text, item) =>\n                    text == 1 ? (\n                        <span className='table-row-no'>\n                            <MinusCircleOutlined style={{ color: '#f85c5a', fontSize: '13px', marginRight: '3px' }} />\n                            no\n                        </span>\n                    ) : (\n                        <span className='table-row-yes'>\n                            <CheckCircleOutlined style={{ color: '#33d6bb', fontSize: '13px', marginRight: '3px' }} />\n                            yes\n                        </span>\n                    )\n            },\n            {\n                title: 'Country',\n                dataIndex: 'country_list',\n                key: 'country_list',\n                width: '100',\n                align: 'center',\n                render: (text, item) => (\n                    <>\n                        {text &&\n                            JSON.parse(text).map((tag, index) => {\n                                return (\n                                    <span className='table-id' key={index}>\n                                        {tag.toUpperCase()}\n                                    </span>\n                                )\n                            })}\n                    </>\n                )\n            },\n            {\n                title: 'Start',\n                dataIndex: 'start_time',\n                key: 'start_time',\n                align: 'center'\n                // render: (text, item) => <div>{text ? getYearMonthDayTimeNew(text) : ''}</div>\n            },\n            {\n                title: 'End',\n                dataIndex: 'close_time',\n                key: 'close_time',\n                align: 'center'\n                // render: (text, item) => <div>{text ? getYearMonthDayTimeNew(text) : ''}</div>\n            },\n            {\n                title: 'Merchant',\n                dataIndex: 'merchant_name',\n                key: 'merchant_name',\n                align: 'center',\n                width: 100,\n                render: (text, item) => (\n                    <div>\n                        <Image src={item.merchant} style={{ maxHeight: 60, overflow: 'hidden' }} />\n                        <span>{text}</span>\n                    </div>\n                )\n            }\n        ]\n\n        const edit = data => {\n            // console.log('data', data)\n            // props.history.push({\n            //     pathname: '/createCampaign',\n            //     query: { ...data }\n            // })\n            // sessionStorage.setItem('query', JSON.stringify(data))\n            let url\n            console.log('data.is_new_campaign', data.is_new_campaign)\n            if (data.is_new_campaign) {\n                url = webhost + '/createCampaignNew/' + data.id\n            } else {\n                url = webhost + '/createCampaign/' + data.id\n            }\n            var win = window.open(url, '_blank')\n            win.focus()\n        }\n\n        return <Table columns={columns(edit)} dataSource={data.childCampaignList} pagination={false} bordered />\n    }\n\n    return (\n        <Layout className='animated fadeIn'>\n            <DetailModal\n                visible={state.visible}\n                onCreate={onCreate}\n                onCancel={() => {\n                    setState({ ...state, visible: false })\n                }}\n                formData={state.formData}\n                disabled={state.disabled}\n            />\n            <WebBreadcrumbNew title='Campaign List' />\n            <div className='base-wr'>\n                <div className='base-style'>\n                    <SearchBar changeSearch={changeSearch} loading={state.loading} />\n                </div>\n                <Row>\n                    <Col span={24}>\n                        <div className='base-style'>\n                            <Row>\n                                <Col span={24} style={{ textAlign: 'right', marginBottom: '15px' }}>\n                                    <Button\n                                        type='primary'\n                                        onClick={() => {\n                                            createCampaigns()\n                                        }}>\n                                        New Campaign\n                                    </Button>\n                                    <Button\n                                        type='primary'\n                                        onClick={() => {\n                                            createCampaignsNew()\n                                        }}>\n                                        New Campaign 2.0\n                                    </Button>\n                                </Col>\n                            </Row>\n                            <Table\n                                columns={columns(edit, rtfEdit)}\n                                expandable={{ expandedRowRender }}\n                                rowKey={record => record.key}\n                                dataSource={state.list}\n                                bordered\n                                size='small'\n                                onChange={handleChange}\n                                loading={state.loading}\n                                pagination={state.pagination}\n                                scroll={{ scrollToFirstRowOnChange: true, x: 1000 }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        </Layout>\n    )\n}\n\nexport default SearchTableView\n","import Campaigns from './Campaigns.jsx'\n\nexport default Campaigns","// This icon file is generated automatically.\nvar MinusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"minus-circle\", \"theme\": \"outlined\" };\nexport default MinusCircleOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MinusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MinusCircleOutlined = function MinusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: MinusCircleOutlinedSvg\n  }));\n};\n\nMinusCircleOutlined.displayName = 'MinusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(MinusCircleOutlined);","// This icon file is generated automatically.\nvar CheckCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0051.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"check-circle\", \"theme\": \"outlined\" };\nexport default CheckCircleOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CheckCircleOutlined = function CheckCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CheckCircleOutlinedSvg\n  }));\n};\n\nCheckCircleOutlined.displayName = 'CheckCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(CheckCircleOutlined);","import React, { Component, useEffect, useState } from 'react'\nimport { Table, Button, Modal, Checkbox } from 'antd'\nimport WebBreadcrumb from '../WebBreadcrumb'\nimport Aset from '@/imgs/aset1.png'\n\nconst WebBreadcrumbNew = ({ title }) => {\n    return (\n        <div className='web-bread-c'>\n            <WebBreadcrumb arr={[title]} />\n            <h3>{title}</h3>\n            <img src={Aset} className='aset' alt='aset' />\n        </div>\n    )\n}\n\nexport default WebBreadcrumbNew\n","import WebBreadcrumbNew from './WebBreadcrumbNew.jsx'\n\nexport default WebBreadcrumbNew\n"],"sourceRoot":""}