{"version":3,"sources":["views/Index/Index.jsx","views/Index/index.js","views/TiktokUserList/TiktokUser.jsx","views/TiktokUserList/index.js","views/EventList/TiktokUser.jsx","views/EventList/index.js"],"names":["Index","useState","useEffect","className","span","style","textAlign","fontSize","Option","MonthPicker","RangePicker","columns","label","value","map","option","index","key","deleteById","title","dataIndex","align","render","avatarUrl","item","width","height","src","v","href","target","onClick","searchLayout","labelCol","wrapperCol","SearchBar","props","useForm","form","name","onFinish","values","changeSearch","gutter","Item","icon","SearchOutlined","type","htmlType","loading","margin","resetFields","SearchTableView","dataSource","setDataSource","list","search","visible","disabled","formData","startRow","userId","downloadUserUrl","state","setState","setLoading","current","pageSize","total","pageI","setPageI","getList","page","searchValue","APIGetTikTokUserList","JSON","stringify","then","resp","console","log","data","result","records","finally","WebBreadcrumb","arr","Aset","pagination","uid","APIDeleteByUid","success","rowKey","record","onChange","bordered","scroll","scrollToFirstRowOnChange","x","TiktokUser","APIGetEventList","eventType","EventList"],"mappings":"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","file":"static/js/index.1f268711.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Layout, Row, Col, Divider } from 'antd'\nimport {\n    WechatOutlined,\n    QqOutlined,\n    DingdingOutlined,\n    WeiboCircleOutlined,\n    FullscreenOutlined\n} from '@ant-design/icons'\nimport screenfull from 'screenfull'\nimport '@/style/view-style/index.less'\nimport BarEcharts from './bar.jsx'\nimport PieEcharts from './pie.jsx'\nimport LineEcharts from './line.jsx'\nimport ScatterEcharts from './scatter.jsx'\nimport PictorialBarEcharts from './pictorialBar.jsx'\nimport { APIgetSysConfig } from '@/mapi'\nimport { render } from 'react-dom'\n\nconst Mouse = props => {\n    const [state, setState] = useState({\n        x: 0,\n        y: 0\n    })\n\n    const handleMouseMove = event => {\n        console.log('22')\n        setState({\n            x: event.clientX,\n            y: event.clientY\n        })\n    }\n\n    return (\n        <div style={{ height: '100%', backgroundColor: 'red' }} onMouseMove={handleMouseMove}>\n            {' '}\n            {props.render(state)}{' '}\n        </div>\n    )\n}\n\nconst Index = () => {\n    const fullToggle = () => {\n        if (screenfull.isEnabled) {\n            screenfull.request(document.getElementById('bar'))\n        }\n    }\n\n    const [str, setStr] = useState('')\n\n    const showhtml = htmlString => {\n        var html = { __html: htmlString }\n        return <div dangerouslySetInnerHTML={html} />\n    }\n\n    const getHomeConfig = () => {\n        APIgetSysConfig({\n            limit: 10,\n            offset: 0\n        })\n            .then(res => {\n                let config = res.data.filter(item => {\n                    return item.key === 'system_title'\n                })\n                setStr(config[0].value)\n            })\n            .catch(err => {\n                console.log('err', err)\n            })\n    }\n\n    useEffect(() => {\n        // getHomeConfig()\n    }, [])\n\n    return (\n        <Layout className='index animated fadeIn'>\n            <Row>\n                {/* <Col span={24}><div className=\"base-style\">{showhtml(str)}</div></Col> */}\n                <Col span={24}>\n                    <p style={{ textAlign: 'center', fontSize: '16px' }}>Welcome to anyStarr </p>\n                    {/* <Mouse render={({x, y}) => (<h1>the mouse position is ({x},{y})</h1>)} /> */}\n                </Col>\n            </Row>\n        </Layout>\n    )\n}\n\nexport default Index\n","import Index from './Index.jsx'\n\nexport default Index\n","import React, { Component, useEffect, useState } from 'react'\nimport WebBreadcrumb from '@/components/WebBreadcrumb'\nimport {\n    Layout,\n    Row,\n    Col,\n    Tag,\n    Table,\n    Button,\n    Modal,\n    Input,\n    Form,\n    DatePicker,\n    Select,\n    message,\n    Upload,\n    Badge,\n    Image\n} from 'antd'\nimport '@/style/view-style/table.less'\nimport {\n    APIexportRewardRecord,\n    APIGetUserList,\n    APIDownloadUser,\n    APIModifyUserStatus,\n    APIbatchUploadUserList,\n    APIDownloadUserNew,\n    APISendActiveEmail\n} from '@/mapi'\nimport { getKeyList } from '@/tools/action.js'\nimport { UploadOutlined, FormOutlined, CloudDownloadOutlined, SearchOutlined } from '@ant-design/icons'\nimport webhost from '@/tools/webhost.js'\nimport Aset from '@/imgs/aset1.png'\nimport { getYearMonthDayTimeNew, getCleanedParams } from '@/tools/help.js'\nimport { APIDeleteByUid, APIGetTikTokUserList } from '../../mapi'\nconst { MonthPicker, RangePicker } = DatePicker\nconst { Option } = Select\n\nconst statusList = [\n    { label: 'Active', value: '1' },\n    { label: 'Banned', value: '2' },\n    { label: 'Locked', value: '5' }\n]\n\nconst StatusOptions = statusList.map((option, index) => {\n    return (\n        <Option key={index} value={option.value}>\n            {option.label}\n        </Option>\n    )\n})\n\nconst getLocalTime = nS => {\n    return new Date(Date.parse(nS)).toLocaleString().replace(/:\\d{1,2}$/, ' ')\n}\n\nconst columns = deleteById => [\n    {\n        title: 'Avatar',\n        dataIndex: 'avatarUrl',\n        key: 'avatarUrl',\n        align: 'center',\n        render: (avatarUrl, item) =>\n            avatarUrl ? (\n                <Image\n                    style={{\n                        width: '60px',\n                        height: '60px'\n                    }}\n                    src={avatarUrl}></Image>\n            ) : null\n    },\n    {\n        title: 'Nick Name',\n        dataIndex: 'displayName',\n        key: 'displayName',\n        align: 'center'\n    },\n    {\n        title: 'Profile DeepLink',\n        dataIndex: 'profileDeepLink',\n        key: 'profileDeepLink',\n        align: 'center',\n        render: (v, item) => {\n            return v ? (\n                <a href={v} target={'_blank'}>\n                    Profile\n                </a>\n            ) : null\n        }\n    },\n    {\n        title: 'Registered Time',\n        dataIndex: 'createTime',\n        key: 'createTime',\n        align: 'center'\n    },\n    {\n        title: 'Followers',\n        dataIndex: 'followerCount',\n        key: 'followerCount',\n        align: 'center'\n        // render: (text, item) => <span>{getLocalTime(item.create_time)}</span>\n    },\n    {\n        title: 'Action',\n        dataIndex: 'id',\n        key: 'id',\n        align: 'center',\n        render: (v, item) => {\n            return <Button onClick={() => deleteById(v)}>Delete</Button>\n        }\n    }\n]\n\nconst searchLayout = {\n    labelCol: {\n        span: 8\n    },\n    wrapperCol: {\n        span: 16\n    }\n}\n\nconst SearchBar = props => {\n    const [form] = Form.useForm()\n\n    const onFinish = values => {\n        props.changeSearch(values)\n    }\n\n    return (\n        <Form\n            {...searchLayout}\n            form={form}\n            name='advanced_search'\n            className='ant-advanced-search-form'\n            onFinish={onFinish}>\n            <Row gutter={24}>\n                <Col span={8}>\n                    <Form.Item name='searchName' label='Nick Name'>\n                        <Input />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={24} style={{ textAlign: 'right' }}>\n                    <Button icon={<SearchOutlined />} type='primary' htmlType='submit' loading={props.loading}>\n                        Search\n                    </Button>\n                    <Button\n                        style={{ margin: '0 8px' }}\n                        onClick={() => {\n                            form.resetFields()\n                        }}>\n                        Reset\n                    </Button>\n                </Col>\n            </Row>\n        </Form>\n    )\n}\n\nconst DetailModal = ({ visible, onCreate, onCancel }) => {\n    const [form] = Form.useForm()\n\n    const [user, setUser] = useState({})\n    const [allMemVisible, setAllMemVisible] = useState(false)\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 14 }\n    }\n    const rangeConfig = {\n        rules: [\n            {\n                type: 'array',\n                message: 'Please select time!'\n            }\n        ]\n    }\n\n    useEffect(() => {}, [])\n\n    return (\n        <Modal\n            visible={visible}\n            title=''\n            okText='Submit'\n            cancelText='Cancel'\n            onCancel={onCancel}\n            onOk={() => {\n                form.validateFields()\n                    .then(values => {\n                        form.resetFields()\n                        onCreate(values)\n                    })\n                    .catch(info => {\n                        console.log('Validate Failed:', info)\n                    })\n            }}>\n            <Form {...layout} form={form} name='form_in_modal'>\n                <Form.Item name='status' label='status' rules={[{ required: true }]}>\n                    <Select>{StatusOptions}</Select>\n                </Form.Item>\n            </Form>\n        </Modal>\n    )\n}\n\nconst SearchTableView = props => {\n    const [dataSource, setDataSource] = useState([])\n    const [state, setState] = useState({\n        list: [],\n        search: {},\n        loading: true,\n        visible: false,\n        disabled: false,\n        formData: {},\n        startRow: 0,\n        userId: '',\n        downloadUserUrl: ''\n    })\n    const [loading, setLoading] = useState(false)\n\n    const [pageI, setPageI] = useState({\n        current: 1,\n        pageSize: 20,\n        total: 0\n    })\n\n    useEffect(() => {\n        getList(1, 20)\n    }, [])\n\n    const getList = (page, pageSize, searchValue) => {\n        setLoading(true)\n        APIGetTikTokUserList(\n            JSON.stringify({\n                page,\n                pageSize,\n                ...searchValue\n            })\n        )\n            .then(resp => {\n                console.log(resp.data.result, 'USER DATA')\n                if (resp.data.result) {\n                    setDataSource(resp.data.result.records)\n                    setPageI({\n                        page: resp.data.result.current,\n                        pageSize: 20,\n                        total: resp.data.result.total\n                    })\n                }\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n\n    const deleteById = uid => {\n        setLoading(true)\n        APIDeleteByUid({\n            uid: uid\n        })\n            .then(resp => {\n                if (resp.data.result) {\n                    message.success('Delete success!')\n                }\n            })\n            .finally(() => {\n                setLoading(false)\n                getList(pageI.current, pageI.pageSize, state.search)\n            })\n    }\n\n    const handleChange = pagination => {\n        console.log(pagination, 'currentcurrentcurrent')\n        getList(pagination.current, pagination.pageSize, state.search)\n    }\n\n    const changeSearch = search => {\n        setState({\n            ...state,\n            search: {\n              ...search\n            }\n        })\n        getList(1, state.pagination.pageSize, search)\n    }\n\n    return (\n        <Layout className='animated fadeIn'>\n            <div className='web-bread-c'>\n                <WebBreadcrumb arr={['User List']} />\n                <h3>User List</h3>\n                <img src={Aset} className='aset' />\n            </div>\n            <div className='base-wr'>\n                <div className='base-style'>\n                    <SearchBar changeSearch={changeSearch} loading={loading} />\n                </div>\n                <Row>\n                    <Col span={24}>\n                        <div className='base-style'>\n                            <Table\n                                columns={columns(deleteById)}\n                                rowKey={record => record.key}\n                                dataSource={dataSource}\n                                onChange={handleChange}\n                                bordered\n                                loading={loading}\n                                pagination={pageI}\n                                scroll={{ scrollToFirstRowOnChange: true, x: 1000 }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        </Layout>\n    )\n}\n\nexport default SearchTableView\n","import TiktokUser from './TiktokUser.jsx'\n\nexport default TiktokUser\n","import React, { Component, useEffect, useState } from 'react'\nimport WebBreadcrumb from '@/components/WebBreadcrumb'\nimport {\n  Layout,\n  Row,\n  Col,\n  Tag,\n  Table,\n  Button,\n  Modal,\n  Input,\n  Form,\n  DatePicker,\n  Select,\n  message,\n  Upload,\n  Badge,\n  Image\n} from 'antd'\nimport '@/style/view-style/table.less'\nimport {\n  APIexportRewardRecord,\n  APIGetUserList,\n  APIDownloadUser,\n  APIModifyUserStatus,\n  APIbatchUploadUserList,\n  APIDownloadUserNew,\n  APISendActiveEmail\n} from '@/mapi'\nimport { getKeyList } from '@/tools/action.js'\nimport { UploadOutlined, FormOutlined, CloudDownloadOutlined, SearchOutlined } from '@ant-design/icons'\nimport webhost from '@/tools/webhost.js'\nimport Aset from '@/imgs/aset1.png'\nimport { getYearMonthDayTimeNew, getCleanedParams } from '@/tools/help.js'\nimport {APIDeleteByUid, APIGetEventList, APIGetTikTokUserList} from '../../mapi'\nconst { MonthPicker, RangePicker } = DatePicker\nconst { Option } = Select\n\nconst statusList = [\n  { label: 'Active', value: '1' },\n  { label: 'Banned', value: '2' },\n  { label: 'Locked', value: '5' }\n]\n\nconst StatusOptions = statusList.map((option, index) => {\n  return (\n    <Option key={index} value={option.value}>\n      {option.label}\n    </Option>\n  )\n})\n\nconst getLocalTime = nS => {\n  return new Date(Date.parse(nS)).toLocaleString().replace(/:\\d{1,2}$/, ' ')\n}\n\nconst columns = () => [\n  {\n    title: 'UserID',\n    dataIndex: 'userId',\n    key: 'userId',\n    align: 'center'\n  },\n  {\n    title: 'Event Name',\n    dataIndex: 'eventType',\n    key: 'eventType',\n    align: 'center'\n  },\n  {\n    title: 'Target object',\n    dataIndex: 'eventValue',\n    key: 'eventValue',\n    align: 'center',\n    render:(v, item)=>{\n      return <div>{item.eventType === \"TYPE_SEARCH\" ? item.searchValue : v}</div>\n    }\n  },\n  {\n    title: 'Create time',\n    dataIndex: 'clickTime',\n    key: 'clickTime',\n    align: 'center'\n    // render: (text, item) => <span>{getLocalTime(item.create_time)}</span>\n  }\n]\n\nconst searchLayout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n}\n\nconst SearchBar = props => {\n  const [form] = Form.useForm()\n\n  const onFinish = values => {\n    props.changeSearch(values)\n  }\n\n  return (\n    <Form\n      {...searchLayout}\n      form={form}\n      name='advanced_search'\n      className='ant-advanced-search-form'\n      onFinish={onFinish}>\n      <Row gutter={24}>\n        <Col span={8}>\n          <Form.Item name='userId' label='User ID'>\n            <Input />\n          </Form.Item>\n          <Form.Item name='eventType' label='Event Type'>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24} style={{ textAlign: 'right' }}>\n          <Button icon={<SearchOutlined />} type='primary' htmlType='submit' loading={props.loading}>\n            Search\n          </Button>\n          <Button\n            style={{ margin: '0 8px' }}\n            onClick={() => {\n              form.resetFields()\n            }}>\n            Reset\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n\nconst DetailModal = ({ visible, onCreate, onCancel }) => {\n  const [form] = Form.useForm()\n\n  const [user, setUser] = useState({})\n  const [allMemVisible, setAllMemVisible] = useState(false)\n\n  const layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 14 }\n  }\n  const rangeConfig = {\n    rules: [\n      {\n        type: 'array',\n        message: 'Please select time!'\n      }\n    ]\n  }\n\n  useEffect(() => {}, [])\n\n  return (\n    <Modal\n      visible={visible}\n      title=''\n      okText='Submit'\n      cancelText='Cancel'\n      onCancel={onCancel}\n      onOk={() => {\n        form.validateFields()\n          .then(values => {\n            form.resetFields()\n            onCreate(values)\n          })\n          .catch(info => {\n            console.log('Validate Failed:', info)\n          })\n      }}>\n      <Form {...layout} form={form} name='form_in_modal'>\n        <Form.Item name='status' label='status' rules={[{ required: true }]}>\n          <Select>{StatusOptions}</Select>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\n\nconst SearchTableView = props => {\n  const [dataSource, setDataSource] = useState([])\n  const [state, setState] = useState({\n    list: [],\n    search: {},\n    loading: true,\n    visible: false,\n    disabled: false,\n    formData: {},\n    startRow: 0,\n    userId: '',\n    downloadUserUrl: ''\n  })\n  const [loading, setLoading] = useState(false)\n\n  const [pageI, setPageI] = useState({\n    current: 1,\n    pageSize: 20,\n    total: 0\n  })\n\n  useEffect(() => {\n    getList(1, 20)\n  }, [])\n\n  const getList = (page, pageSize, search) => {\n    setLoading(true)\n    APIGetEventList(\n      JSON.stringify({\n        page,\n        pageSize,\n        ...search\n      })\n    )\n      .then(resp => {\n        if (resp.data.result) {\n          setDataSource(resp.data.result.records)\n          setPageI({\n            page: resp.data.result.current,\n            pageSize: 20,\n            total: resp.data.result.total\n          })\n        }\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }\n\n  const deleteById = uid => {\n    setLoading(true)\n    APIDeleteByUid({\n      uid: uid\n    })\n      .then(resp => {\n        if (resp.data.result) {\n          message.success('Delete success!')\n        }\n      })\n      .finally(() => {\n        setLoading(false)\n        getList(pageI.current, pageI.pageSize, state.search)\n      })\n  }\n\n  const handleChange = pagination => {\n    console.log(pagination, 'currentcurrentcurrent')\n    getList(pagination.current, pagination.pageSize, state.search)\n  }\n\n  const changeSearch = search => {\n    setState({\n      ...state,\n      search: search\n    })\n    getList(1, state.pagination.pageSize, search)\n  }\n\n  return (\n    <Layout className='animated fadeIn'>\n      <div className='web-bread-c'>\n        <WebBreadcrumb arr={['Event List']} />\n        <h3>User List</h3>\n        <img src={Aset} className='aset' />\n      </div>\n      <div className='base-wr'>\n        <div className='base-style'>\n          <SearchBar changeSearch={changeSearch} loading={loading} />\n        </div>\n        <Row>\n          <Col span={24}>\n            <div className='base-style'>\n              <Table\n                columns={columns()}\n                rowKey={record => record.key}\n                dataSource={dataSource}\n                onChange={handleChange}\n                bordered\n                loading={loading}\n                pagination={pageI}\n                scroll={{ scrollToFirstRowOnChange: true, x: 1000 }}\n              />\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </Layout>\n  )\n}\n\nexport default SearchTableView\n","import EventList from './TiktokUser.jsx'\n\nexport default EventList\n"],"sourceRoot":""}