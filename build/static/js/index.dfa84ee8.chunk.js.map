{"version":3,"sources":["views/Index/Index.jsx","views/Index/index.js","views/TiktokUserList/TiktokUser.jsx","views/TiktokUserList/index.js","views/EventList/TiktokUser.jsx","views/EventList/index.js"],"names":["Index","useState","useEffect","className","span","style","textAlign","fontSize","Option","MonthPicker","RangePicker","label","value","map","option","index","key","columns","deleteById","title","dataIndex","align","render","avatarUrl","item","width","height","src","v","href","target","utcString","trim","Error","utcDate","Date","isNaN","getTime","Intl","DateTimeFormat","timeZone","year","month","day","hour","minute","second","format","split","date","time","replace","error","console","message","formatToBeijingTime","onClick","searchLayout","labelCol","wrapperCol","SearchBar","props","useForm","form","name","onFinish","values","changeSearch","gutter","Item","icon","SearchOutlined","type","htmlType","loading","margin","resetFields","SearchTableView","dataSource","setDataSource","list","search","visible","disabled","formData","startRow","userId","downloadUserUrl","state","setState","setLoading","all","setAll","todayAdd","setTodayAdd","allAddKitchen","setAllAddKitchen","todayAddKitchen","setTodayAddKitchen","result","setResult","current","pageSize","total","pageI","setPageI","getList","getUser","page","searchValue","APIGetTikTokUserList","JSON","stringify","then","resp","log","data","records","finally","APIGetTikTokUserSumInfo","today","WebBreadcrumb","arr","Aset","display","marginBottom","justifyContent","v2All","v2Today","allSample","todaySample","flexWrap","newHost","flex","uid","APIDeleteByUid","success","rowKey","record","onChange","pagination","bordered","scroll","scrollToFirstRowOnChange","x","TiktokUser","APIGetEventList","justContent","eventType","EventList"],"mappings":"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","file":"static/js/index.dfa84ee8.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Layout, Row, Col, Divider } from 'antd'\nimport {\n    WechatOutlined,\n    QqOutlined,\n    DingdingOutlined,\n    WeiboCircleOutlined,\n    FullscreenOutlined\n} from '@ant-design/icons'\nimport screenfull from 'screenfull'\nimport '@/style/view-style/index.less'\nimport BarEcharts from './bar.jsx'\nimport PieEcharts from './pie.jsx'\nimport LineEcharts from './line.jsx'\nimport ScatterEcharts from './scatter.jsx'\nimport PictorialBarEcharts from './pictorialBar.jsx'\nimport { APIgetSysConfig } from '@/mapi'\nimport { render } from 'react-dom'\n\nconst Mouse = props => {\n    const [state, setState] = useState({\n        x: 0,\n        y: 0\n    })\n\n    const handleMouseMove = event => {\n        console.log('22')\n        setState({\n            x: event.clientX,\n            y: event.clientY\n        })\n    }\n\n    return (\n        <div style={{ height: '100%', backgroundColor: 'red' }} onMouseMove={handleMouseMove}>\n            {' '}\n            {props.render(state)}{' '}\n        </div>\n    )\n}\n\nconst Index = () => {\n    const fullToggle = () => {\n        if (screenfull.isEnabled) {\n            screenfull.request(document.getElementById('bar'))\n        }\n    }\n\n    const [str, setStr] = useState('')\n\n    const showhtml = htmlString => {\n        var html = { __html: htmlString }\n        return <div dangerouslySetInnerHTML={html} />\n    }\n\n    const getHomeConfig = () => {\n        APIgetSysConfig({\n            limit: 10,\n            offset: 0\n        })\n            .then(res => {\n                let config = res.data.filter(item => {\n                    return item.key === 'system_title'\n                })\n                setStr(config[0].value)\n            })\n            .catch(err => {\n                console.log('err', err)\n            })\n    }\n\n    useEffect(() => {\n        // getHomeConfig()\n    }, [])\n\n    return (\n        <Layout className='index animated fadeIn'>\n            <Row>\n                {/* <Col span={24}><div className=\"base-style\">{showhtml(str)}</div></Col> */}\n                <Col span={24}>\n                    <p style={{ textAlign: 'center', fontSize: '16px' }}>Welcome to anyStarr </p>\n                    {/* <Mouse render={({x, y}) => (<h1>the mouse position is ({x},{y})</h1>)} /> */}\n                </Col>\n            </Row>\n        </Layout>\n    )\n}\n\nexport default Index\n","import Index from './Index.jsx'\n\nexport default Index\n","import React, { Component, useEffect, useState } from 'react'\nimport WebBreadcrumb from '@/components/WebBreadcrumb'\nimport {\n    Layout,\n    Row,\n    Col,\n    Tag,\n    Table,\n    Button,\n    Modal,\n    Input,\n    Form,\n    DatePicker,\n    Select,\n    message,\n    Upload,\n    Badge,\n    Image\n} from 'antd'\nimport '@/style/view-style/table.less'\nimport {\n    APIexportRewardRecord,\n    APIGetUserList,\n    APIDownloadUser,\n    APIModifyUserStatus,\n    APIbatchUploadUserList,\n    APIDownloadUserNew,\n    APISendActiveEmail\n} from '@/mapi'\nimport { getKeyList } from '@/tools/action.js'\nimport { UploadOutlined, FormOutlined, CloudDownloadOutlined, SearchOutlined } from '@ant-design/icons'\nimport webhost from '@/tools/webhost.js'\nimport Aset from '@/imgs/aset1.png'\nimport { getYearMonthDayTimeNew, getCleanedParams } from '@/tools/help.js'\nimport { APIDeleteByUid, APIGetTikTokUserList, APIGetTikTokUserSumInfo } from '../../mapi'\nimport { newHost } from '../../tools/new_host'\nconst { MonthPicker, RangePicker } = DatePicker\nconst { Option } = Select\n\nconst statusList = [\n    { label: 'Active', value: '1' },\n    { label: 'Banned', value: '2' },\n    { label: 'Locked', value: '5' }\n]\n\nconst StatusOptions = statusList.map((option, index) => {\n    return (\n        <Option key={index} value={option.value}>\n            {option.label}\n        </Option>\n    )\n})\n\nconst getLocalTime = nS => {\n    return new Date(Date.parse(nS)).toLocaleString().replace(/:\\d{1,2}$/, ' ')\n}\n\nfunction formatToBeijingTime(utcString) {\n    try {\n        // 检查传入是否为有效的字符串\n        if (typeof utcString !== 'string' || !utcString.trim()) {\n            throw new Error('Invalid input: Expected a non-empty string.')\n        }\n\n        // 尝试解析日期\n        const utcDate = new Date(utcString)\n        if (isNaN(utcDate.getTime())) {\n            throw new Error('Invalid input: Unable to parse date string.')\n        }\n\n        // 格式化为北京时间\n        const options = {\n            timeZone: 'Asia/Shanghai',\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit'\n        }\n\n        const formatter = new Intl.DateTimeFormat('zh-CN', options)\n        const formattedDate = formatter.format(utcDate)\n\n        // 转换为 YYYY-MM-DD hh:mm:ss 格式\n        const [date, time] = formattedDate.split(' ')\n        return `${date.replace(/\\//g, '-')} ${time}`\n    } catch (error) {\n        console.error('Error formatting date:', error.message)\n        return null // 返回 null 表示无法格式化\n    }\n} // null\n\nconst columns = deleteById => [\n    {\n        title: 'Avatar',\n        dataIndex: 'avatarUrl',\n        key: 'avatarUrl',\n        align: 'center',\n        render: (avatarUrl, item) =>\n            avatarUrl ? (\n                <Image\n                    style={{\n                        width: '60px',\n                        height: '60px'\n                    }}\n                    src={avatarUrl}></Image>\n            ) : null\n    },\n    {\n        title: 'Nick Name',\n        dataIndex: 'displayName',\n        key: 'displayName',\n        align: 'center'\n    },\n    {\n        title: 'Profile DeepLink',\n        dataIndex: 'profileDeepLink',\n        key: 'profileDeepLink',\n        align: 'center',\n        render: (v, item) => {\n            return v ? (\n                <a href={v} target={'_blank'}>\n                    Profile\n                </a>\n            ) : null\n        }\n    },\n    {\n        title: 'Registered Time',\n        dataIndex: 'createTime',\n        key: 'createTime',\n        align: 'center',\n        render: (v, item) => {\n            return formatToBeijingTime(v)\n        }\n    },\n    {\n        title: 'Followers',\n        dataIndex: 'followerCount',\n        key: 'followerCount',\n        align: 'center'\n        // render: (text, item) => <span>{getLocalTime(item.create_time)}</span>\n    },\n    {\n        title: 'Action',\n        dataIndex: 'id',\n        key: 'id',\n        align: 'center',\n        render: (v, item) => {\n            return <Button onClick={() => deleteById(v)}>Delete</Button>\n        }\n    }\n]\n\nconst searchLayout = {\n    labelCol: {\n        span: 8\n    },\n    wrapperCol: {\n        span: 16\n    }\n}\n\nconst SearchBar = props => {\n    const [form] = Form.useForm()\n\n    const onFinish = values => {\n        props.changeSearch(values)\n    }\n\n    return (\n        <Form\n            {...searchLayout}\n            form={form}\n            name='advanced_search'\n            className='ant-advanced-search-form'\n            onFinish={onFinish}>\n            <Row gutter={24}>\n                <Col span={8}>\n                    <Form.Item name='searchName' label='Nick Name'>\n                        <Input />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={24} style={{ textAlign: 'right' }}>\n                    <Button icon={<SearchOutlined />} type='primary' htmlType='submit' loading={props.loading}>\n                        Search\n                    </Button>\n                    <Button\n                        style={{ margin: '0 8px' }}\n                        onClick={() => {\n                            form.resetFields()\n                        }}>\n                        Reset\n                    </Button>\n                </Col>\n            </Row>\n        </Form>\n    )\n}\n\nconst DetailModal = ({ visible, onCreate, onCancel }) => {\n    const [form] = Form.useForm()\n\n    const [user, setUser] = useState({})\n    const [allMemVisible, setAllMemVisible] = useState(false)\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 14 }\n    }\n    const rangeConfig = {\n        rules: [\n            {\n                type: 'array',\n                message: 'Please select time!'\n            }\n        ]\n    }\n\n    useEffect(() => {}, [])\n\n    return (\n        <Modal\n            visible={visible}\n            title=''\n            okText='Submit'\n            cancelText='Cancel'\n            onCancel={onCancel}\n            onOk={() => {\n                form.validateFields()\n                    .then(values => {\n                        form.resetFields()\n                        onCreate(values)\n                    })\n                    .catch(info => {\n                        console.log('Validate Failed:', info)\n                    })\n            }}>\n            <Form {...layout} form={form} name='form_in_modal'>\n                <Form.Item name='status' label='status' rules={[{ required: true }]}>\n                    <Select>{StatusOptions}</Select>\n                </Form.Item>\n            </Form>\n        </Modal>\n    )\n}\n\nconst SearchTableView = props => {\n    const [dataSource, setDataSource] = useState([])\n    const [state, setState] = useState({\n        list: [],\n        search: {},\n        loading: true,\n        visible: false,\n        disabled: false,\n        formData: {},\n        startRow: 0,\n        userId: '',\n        downloadUserUrl: ''\n    })\n    const [loading, setLoading] = useState(false)\n    const [all, setAll] = useState(0)\n    const [todayAdd, setTodayAdd] = useState(0)\n    const [allAddKitchen, setAllAddKitchen] = useState(0)\n    const [todayAddKitchen, setTodayAddKitchen] = useState(0)\n\n    const [result, setResult] = useState()\n\n    const [pageI, setPageI] = useState({\n        current: 1,\n        pageSize: 20,\n        total: 0\n    })\n\n    useEffect(() => {\n        getList(1, 20)\n        getUser()\n    }, [])\n\n    const getList = (page, pageSize, searchValue) => {\n        setLoading(true)\n        APIGetTikTokUserList(\n            JSON.stringify({\n                page,\n                pageSize,\n                ...searchValue\n            })\n        )\n            .then(resp => {\n                console.log(resp.data.result, 'USER DATA')\n                if (resp.data.result) {\n                    setDataSource(resp.data.result.records)\n                    setPageI({\n                        page: resp.data.result.current,\n                        pageSize: pageSize,\n                        total: resp.data.result.total\n                    })\n                }\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n\n    const getUser = () => {\n        APIGetTikTokUserSumInfo().then(resp => {\n            if (resp.data.result) {\n                setAll(resp.data.result.all)\n                setTodayAdd(resp.data.result.today)\n                setAllAddKitchen(resp.data.result.allAddKitchen)\n                setTodayAddKitchen(resp.data.result.todayAddKitchen)\n                setResult(resp.data.result)\n            }\n        })\n    }\n\n    const deleteById = uid => {\n        setLoading(true)\n        APIDeleteByUid({\n            uid: uid\n        })\n            .then(resp => {\n                if (resp.data.result) {\n                    message.success('Delete success!')\n                }\n            })\n            .finally(() => {\n                setLoading(false)\n                getList(pageI.current, pageI.pageSize, state.search)\n            })\n    }\n\n    const handleChange = pagination => {\n        console.log(pagination, 'currentcurrentcurrent')\n        getList(pagination.current, pagination.pageSize, state.search)\n    }\n\n    const changeSearch = search => {\n        setState({\n            ...state,\n            search: {\n                ...search\n            }\n        })\n        getList(1, pageI.pageSize, search)\n    }\n\n    return (\n        <Layout className='animated fadeIn'>\n            <div className='web-bread-c'>\n                <WebBreadcrumb arr={['User List']} />\n                <h3>User List</h3>\n                <img src={Aset} className='aset' />\n            </div>\n            <div className='base-wr'>\n                <div className='base-style'>\n                    <SearchBar changeSearch={changeSearch} loading={loading} />\n                </div>\n                <Row>\n                    <Col span={24}>\n                        <div className='base-style'>\n                            <div\n                                style={{\n                                    display: 'flex',\n                                    fontSize: '16px',\n                                    marginBottom: '10px',\n                                    justifyContent: 'space-between'\n                                }}>\n                                <div>\n                                    <div\n                                        style={{\n                                            display: 'flex'\n                                        }}>\n                                        <div>总用户数：{all}</div>\n                                        <div style={{ width: '20px' }}></div>\n                                        <div>昨日新增：{todayAdd}</div>\n                                        <div style={{ width: '20px' }}></div>\n                                        <div>总二次授权：{result?.v2All ?? '-'}</div>\n                                        <div style={{ width: '20px' }}></div>\n                                        <div>昨日二次授权：{result?.v2Today ?? '-'}</div>\n                                    </div>\n                                    <div\n                                        style={{\n                                            display: 'flex'\n                                        }}>\n                                        <div>总加橱：{allAddKitchen}</div>\n                                        <div style={{ width: '20px' }}></div>\n                                        <div>昨日加橱：{todayAddKitchen}</div>\n                                    </div>\n                                    <div\n                                        style={{\n                                            display: 'flex'\n                                        }}>\n                                        <div>总申样：{result?.allSample ?? '-'}</div>\n                                        <div style={{ width: '20px' }}></div>\n                                        <div>昨日申样：{result?.todaySample ?? '-'}</div>\n                                    </div>\n                                </div>\n\n                                <div\n                                    style={{\n                                        fontSize: '14px'\n                                    }}>\n                                    <div\n                                        style={{\n                                            display: 'flex',\n                                            flexWrap: 'wrap'\n                                        }}>\n                                        <a href={`${newHost}/admin/api/v1/user/downLoadYesterday`}>\n                                            <Button>导出新增用户名单</Button>\n                                        </a>\n                                        <a href={`${newHost}/admin/api/v1/user/downLoadAll`}>\n                                            <Button>导出全部用户名单</Button>\n                                        </a>\n                                        <a href={`${newHost}/admin/api/v1/user/downLoadV2Yesterday`}>\n                                            <Button>导出新增授权用户</Button>\n                                        </a>\n                                        <a href={`${newHost}/admin/api/v1/user/downLoadV2All`}>\n                                            <Button>导出全部授权用户</Button>\n                                        </a>\n                                    </div>\n\n                                    <div\n                                        style={{\n                                            display: 'flex'\n                                        }}>\n                                        <div style={{ flex: 1 }}></div>\n                                        <a href={`${newHost}/admin/api/v1/user/downLoadKitchenYesterday`}>\n                                            <Button>导出新增用户加橱</Button>\n                                        </a>\n                                        <a href={`${newHost}/admin/api/v1/user/downLoadKitchenAll`}>\n                                            <Button>导出全部用户加橱</Button>\n                                        </a>\n                                        <a href={`${newHost}/admin/api/v1/user/downShowCaseProduct`}>\n                                            <Button>导出橱窗商品</Button>\n                                        </a>\n                                    </div>\n\n                                    <div\n                                        style={{\n                                            display: 'flex',\n                                            flexWrap: 'wrap'\n                                        }}>\n                                        <div style={{ flex: 1 }}></div>\n                                        <a href={`${newHost}/admin/api/v1/user/downLoadSampleYesterday`}>\n                                            <Button>导出新增申样</Button>\n                                        </a>\n                                        <a href={`${newHost}/admin/api/v1/user/downLoadSampleAll`}>\n                                            <Button>导出全部申样</Button>\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <Table\n                                columns={columns(deleteById)}\n                                rowKey={record => record.key}\n                                dataSource={dataSource}\n                                onChange={handleChange}\n                                bordered\n                                loading={loading}\n                                pagination={pageI}\n                                scroll={{ scrollToFirstRowOnChange: true, x: 1000 }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        </Layout>\n    )\n}\n\nexport default SearchTableView\n","import TiktokUser from './TiktokUser.jsx'\n\nexport default TiktokUser\n","import React, { Component, useEffect, useState } from 'react'\nimport WebBreadcrumb from '@/components/WebBreadcrumb'\nimport {\n    Layout,\n    Row,\n    Col,\n    Tag,\n    Table,\n    Button,\n    Modal,\n    Input,\n    Form,\n    DatePicker,\n    Select,\n    message,\n    Upload,\n    Badge,\n    Image\n} from 'antd'\nimport '@/style/view-style/table.less'\nimport {\n    APIexportRewardRecord,\n    APIGetUserList,\n    APIDownloadUser,\n    APIModifyUserStatus,\n    APIbatchUploadUserList,\n    APIDownloadUserNew,\n    APISendActiveEmail\n} from '@/mapi'\nimport { getKeyList } from '@/tools/action.js'\nimport { UploadOutlined, FormOutlined, CloudDownloadOutlined, SearchOutlined } from '@ant-design/icons'\nimport webhost from '@/tools/webhost.js'\nimport Aset from '@/imgs/aset1.png'\nimport { getYearMonthDayTimeNew, getCleanedParams } from '@/tools/help.js'\nimport { APIDeleteByUid, APIGetEventList, APIGetTikTokUserList } from '../../mapi'\nimport { newHost } from '../../tools/new_host'\nconst { MonthPicker, RangePicker } = DatePicker\nconst { Option } = Select\n\nconst statusList = [\n    { label: 'Active', value: '1' },\n    { label: 'Banned', value: '2' },\n    { label: 'Locked', value: '5' }\n]\n\nconst StatusOptions = statusList.map((option, index) => {\n    return (\n        <Option key={index} value={option.value}>\n            {option.label}\n        </Option>\n    )\n})\n\nconst getLocalTime = nS => {\n    return new Date(Date.parse(nS)).toLocaleString().replace(/:\\d{1,2}$/, ' ')\n}\n\nconst columns = () => [\n    {\n        title: 'UserID',\n        dataIndex: 'userId',\n        key: 'userId',\n        align: 'center'\n    },\n    {\n        title: 'Event Name',\n        dataIndex: 'eventType',\n        key: 'eventType',\n        align: 'center'\n    },\n    {\n        title: 'Target object',\n        dataIndex: 'eventValue',\n        key: 'eventValue',\n        align: 'center',\n        render: (v, item) => {\n            return <div>{item.eventType === 'TYPE_SEARCH' ? item.searchValue : v}</div>\n        }\n    },\n    {\n        title: 'Create time',\n        dataIndex: 'clickTime',\n        key: 'clickTime',\n        align: 'center'\n        // render: (text, item) => <span>{getLocalTime(item.create_time)}</span>\n    }\n]\n\nconst searchLayout = {\n    labelCol: {\n        span: 8\n    },\n    wrapperCol: {\n        span: 16\n    }\n}\n\nconst SearchBar = props => {\n    const [form] = Form.useForm()\n\n    const onFinish = values => {\n        props.changeSearch(values)\n    }\n\n    return (\n        <Form\n            {...searchLayout}\n            form={form}\n            name='advanced_search'\n            className='ant-advanced-search-form'\n            onFinish={onFinish}>\n            <Row gutter={24}>\n                <Col span={8}>\n                    <Form.Item name='userId' label='User ID'>\n                        <Input />\n                    </Form.Item>\n                    <Form.Item name='eventType' label='Event Type'>\n                        <Input />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={24} style={{ textAlign: 'right' }}>\n                    <Button icon={<SearchOutlined />} type='primary' htmlType='submit' loading={props.loading}>\n                        Search\n                    </Button>\n                    <Button\n                        style={{ margin: '0 8px' }}\n                        onClick={() => {\n                            form.resetFields()\n                        }}>\n                        Reset\n                    </Button>\n                </Col>\n            </Row>\n        </Form>\n    )\n}\n\nconst DetailModal = ({ visible, onCreate, onCancel }) => {\n    const [form] = Form.useForm()\n\n    const [user, setUser] = useState({})\n    const [allMemVisible, setAllMemVisible] = useState(false)\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 14 }\n    }\n    const rangeConfig = {\n        rules: [\n            {\n                type: 'array',\n                message: 'Please select time!'\n            }\n        ]\n    }\n\n    useEffect(() => {}, [])\n\n    return (\n        <Modal\n            visible={visible}\n            title=''\n            okText='Submit'\n            cancelText='Cancel'\n            onCancel={onCancel}\n            onOk={() => {\n                form.validateFields()\n                    .then(values => {\n                        form.resetFields()\n                        onCreate(values)\n                    })\n                    .catch(info => {\n                        console.log('Validate Failed:', info)\n                    })\n            }}>\n            <Form {...layout} form={form} name='form_in_modal'>\n                <Form.Item name='status' label='status' rules={[{ required: true }]}>\n                    <Select>{StatusOptions}</Select>\n                </Form.Item>\n            </Form>\n        </Modal>\n    )\n}\n\nconst SearchTableView = props => {\n    const [dataSource, setDataSource] = useState([])\n    const [state, setState] = useState({\n        list: [],\n        search: {},\n        loading: true,\n        visible: false,\n        disabled: false,\n        formData: {},\n        startRow: 0,\n        userId: '',\n        downloadUserUrl: ''\n    })\n    const [loading, setLoading] = useState(false)\n\n    const [pageI, setPageI] = useState({\n        current: 1,\n        pageSize: 20,\n        total: 0\n    })\n\n    useEffect(() => {\n        getList(1, 20)\n    }, [])\n\n    const getList = (page, pageSize, search) => {\n        setLoading(true)\n        APIGetEventList(\n            JSON.stringify({\n                page,\n                pageSize,\n                ...search\n            })\n        )\n            .then(resp => {\n                if (resp.data.result) {\n                    setDataSource(resp.data.result.records)\n                    setPageI({\n                        page: resp.data.result.current,\n                        pageSize: pageSize,\n                        total: resp.data.result.total\n                    })\n                }\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n\n    const deleteById = uid => {\n        setLoading(true)\n        APIDeleteByUid({\n            uid: uid\n        })\n            .then(resp => {\n                if (resp.data.result) {\n                    message.success('Delete success!')\n                }\n            })\n            .finally(() => {\n                setLoading(false)\n                getList(pageI.current, pageI.pageSize, state.search)\n            })\n    }\n\n    const handleChange = pagination => {\n        console.log(pagination, 'currentcurrentcurrent')\n        getList(pagination.current, pagination.pageSize, state.search)\n    }\n\n    const changeSearch = search => {\n        console.log(search, 'changeSearchchangeSearchchangeSearch')\n        setState({\n            ...state,\n            search: search\n        })\n        getList(1, pageI.pageSize, search)\n    }\n\n    return (\n        <Layout className='animated fadeIn'>\n            <div className='web-bread-c'>\n                <WebBreadcrumb arr={['Event List']} />\n                <h3>User List</h3>\n                <img src={Aset} className='aset' />\n            </div>\n            <div className='base-wr'>\n                <div className='base-style'>\n                    <SearchBar changeSearch={changeSearch} loading={loading} />\n                </div>\n                <Row>\n                    <Col span={24}>\n                        <div className='base-style'>\n                            <div\n                                style={{\n                                    display: 'flex',\n                                    justContent: 'space-between'\n                                }}>\n                                <a href={`${newHost}/admin/api/v1/user/downFeedBack`}>\n                                    <Button>下载Feedback</Button>\n                                </a>\n                                <a href={`${newHost}/admin/api/v1/user/downCapErrorLog`}>\n                                    <Button>下载Cap异常记录</Button>\n                                </a>\n                            </div>\n                            <Table\n                                columns={columns()}\n                                rowKey={record => record.key}\n                                dataSource={dataSource}\n                                onChange={handleChange}\n                                bordered\n                                loading={loading}\n                                pagination={pageI}\n                                scroll={{ scrollToFirstRowOnChange: true, x: 1000 }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        </Layout>\n    )\n}\n\nexport default SearchTableView\n","import EventList from './TiktokUser.jsx'\n\nexport default EventList\n"],"sourceRoot":""}