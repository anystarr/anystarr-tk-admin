{"version":3,"sources":["api/index.js","views/AddSystemUser/AddSystemUser.jsx","views/AddSystemUser/index.js","api/config.js","components/WebBreadcrumbNew/WebBreadcrumbNew.jsx","components/WebBreadcrumbNew/index.js"],"names":["token","localStorage","getItem","request","axios","create","baseURL","BASEURL","timeout","defaults","headers","post","interceptors","use","config","Authorization","error","Promise","reject","response","status","resolve","console","log","layout","RangePicker","labelCol","span","wrapperCol","tailLayout","offset","Option","MerchantDetail","props","useState","id","fullName","displayName","logo","useForm","form","roleList","roleListState","setRoleListState","useEffect","match","params","APIGetCrmUserDetail","then","resp","data","user_role_list","roleIds","map","item","push","setFieldsValue","nickname","email","role_ids","initForm","APIGetUserNeedRole","className","WebBreadcrumbNew","title","name","initialValues","remember","onFinish","values","APICreateOrModifyCrmUser","crmUserJson","JSON","stringify","history","onFinishFailed","errorInfo","Item","label","disabled","rules","required","message","type","mode","index","value","key","htmlType","style","marginLeft","AddSystemUser","WebBreadcrumb","arr","src","Aset","alt"],"mappings":"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","file":"static/js/41.5724f42e.chunk.js","sourcesContent":["import axios from 'axios';\n\nimport { BASEURL } from '@/api/config'\n\n// 这里取决于登录的时候将 token 存储在哪里\nconst token = localStorage.getItem('token');\n\nconst request = axios.create({\n    baseURL: BASEURL,\n    timeout: 5000\n})\n\n// 设置post请求头\nrequest.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'\n\n// 添加请求拦截器\nrequest.interceptors.request.use(\n    config => {\n        // 将 token 添加到请求头\n        token && (config.headers.Authorization = token)\n        return config\n    },\n    error => {\n        return Promise.reject(error)\n    }\n)\n\n// 添加响应拦截器\nrequest.interceptors.response.use(\n    response => {\n        if (response.status === 200) {\n            return Promise.resolve(response)\n        } else {\n            return Promise.reject(response)\n        }\n    },\n    error => {\n        // 相应错误处理\n        // 比如： token 过期， 无权限访问， 路径不存在， 服务器问题等\n        if(error.response && error.response.status) {\n            switch (error.response.status) {\n                case 401:\n                    break\n                case 403:\n                    break\n                case 404:\n                    break\n                case 500:\n                    break\n                default:\n                    console.log('其他错误信息')\n            }\n        }\n        return Promise.reject(error)\n    }\n)\n\nexport default request\n","import React, { useState, useEffect } from 'react'\nimport {\n    Layout,\n    Row,\n    Col,\n    Divider,\n    Select,\n    Form,\n    Input,\n    Button,\n    Checkbox,\n    message,\n    Switch,\n    DatePicker,\n    Upload\n} from 'antd'\nimport moment from 'moment'\nimport WebBreadcrumbNew from '@/components/WebBreadcrumbNew'\nimport '@/style/view-style/index.less'\nimport {\n    APIcreateArea,\n    APIGetCountryList,\n    APICreateModifyCampaign,\n    APIUploadFile,\n    APIUploadPromoCode,\n    APICreateOrModifyMerchant,\n    APIGetCrmUserDetail,\n    APICreateOrModifyCrmUser,\n    APIGetUserNeedRole\n} from '@/mapi'\nimport axios from '@/api'\nimport { API } from '@/api/config'\n// import { withRouter } from \"react-router-dom\";\nimport { UploadOutlined, InboxOutlined, DeleteOutlined } from '@ant-design/icons'\nimport BraftEditor from 'braft-editor'\nimport 'braft-editor/dist/index.css'\nimport { type } from 'koa/lib/request'\nconst { RangePicker } = DatePicker\n\nconst layout = {\n    labelCol: {\n        span: 8\n    },\n    wrapperCol: {\n        span: 16\n    }\n}\nconst tailLayout = {\n    wrapperCol: {\n        offset: 10,\n        span: 16\n    }\n}\n\nconst rangeConfig = {\n    rules: [{ type: 'array', required: true, message: 'Please select time!' }]\n}\nconst config = {\n    rules: [\n        {\n            type: 'object',\n            required: true,\n            message: 'Please select time!'\n        }\n    ]\n}\n\nconst { Option } = Select\n\nconst template1 =\n    'step1: apply and receive exclusion discount code ; step2:share on social ; step3:Upload proof(Screenshots and links) to AnyStarr'\n\nconst MerchantDetail = props => {\n    const [state, setState] = useState({\n        id: '12',\n        fullName: 'hhh',\n        displayName: 'display',\n        logo: ''\n    })\n    const [form] = Form.useForm()\n\n    const [roleListState, setRoleListState] = useState({\n        roleList: []\n    })\n\n    const onFinish = values => {\n        let id = props.match.params.id\n        let params = {\n            nickname: values.nickname,\n            email: values.email,\n            role_ids: values.role_ids\n        }\n        if (id != 0) {\n            params.id = id\n        }\n        APICreateOrModifyCrmUser({\n            crmUserJson: JSON.stringify(params)\n        }).then(resp => {\n            props.history.push('/permissions/system_user')\n        })\n    }\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo)\n        // this.props.history.push(\"/index\");\n    }\n\n    const initForm = () => {\n        // let query = props.location.query || (sessionStorage.getItem('query')?JSON.parse(sessionStorage.getItem('query')):{})\n        // console.log('query', query)\n        // if (query) {\n        //     form.setFieldsValue({\n        //         ...query,\n        //         id: query.id,\n        //         fullName: query.fullName,\n        //         displayName: query.displayName,\n        //     })\n        //     setState({\n        //         ...state,\n        //         logo: query.logo\n        //     })\n        // }\n        let id = props.match.params.id\n        if (id == 0) {\n            return\n        }\n        APIGetCrmUserDetail({ id: id }).then(resp => {\n            let roleList = resp.data.data.user_role_list\n            let roleIds = []\n            roleList.map(item => {\n                roleIds.push(item.id)\n            })\n\n            form.setFieldsValue({\n                nickname: resp.data.data.nickname,\n                email: resp.data.data.email,\n                id: resp.data.data.id,\n                role_ids: roleIds\n            })\n        })\n    }\n\n    const getRoleList = () => {\n        APIGetUserNeedRole().then(resp => {\n            setRoleListState({\n                roleList: resp.data.data\n            })\n        })\n    }\n\n    useEffect(() => {\n        initForm()\n        getRoleList()\n    }, [])\n\n    return (\n        <Layout className='index animated fadeIn'>\n            <WebBreadcrumbNew title='System user info' />\n            <div className='base-style base-detail' id='demoline'>\n                <Row>\n                    <Col span={24}>\n                        <Form\n                            {...layout}\n                            name='basic'\n                            initialValues={{\n                                remember: true\n                            }}\n                            form={form}\n                            onFinish={onFinish}\n                            onFinishFailed={onFinishFailed}>\n                            <Row>\n                                <Col span={12}>\n                                    <Form.Item label='System User ID' name='id'>\n                                        <Input disabled />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={12}>\n                                    <Form.Item\n                                        label='Email'\n                                        name='email'\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Email is missing'\n                                            },\n                                            {\n                                                type: 'email',\n                                                message: 'Email is not validate email!'\n                                            }\n                                        ]}>\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={12}>\n                                    <Form.Item\n                                        label='Name'\n                                        name='nickname'\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Instagram is missing'\n                                            }\n                                        ]}>\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={12}>\n                                    <Form.Item\n                                        label='Role'\n                                        name='role_ids'\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Instagram is missing'\n                                            }\n                                        ]}>\n                                        <Select mode='multiple'>\n                                            {roleListState.roleList.map((item, index) => {\n                                                return (\n                                                    <Option value={item.id} key={item.id}>\n                                                        {item.name}\n                                                    </Option>\n                                                )\n                                            })}\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n\n                            <Form.Item {...tailLayout}>\n                                <div>\n                                    <Button type='primary' htmlType='submit' style={{ marginLeft: '30px' }}>\n                                        Save\n                                    </Button>\n                                </div>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        </Layout>\n    )\n}\n\nexport default MerchantDetail\n","import AddSystemUser from './AddSystemUser.jsx'\nexport default AddSystemUser","export const API = 'http://149.28.152.251:9001/v1'\n\nexport const BASEURL = 'http://149.28.152.251:9001/v1'\n","import React, { Component, useEffect, useState } from 'react'\nimport { Table, Button, Modal, Checkbox } from 'antd'\nimport WebBreadcrumb from '../WebBreadcrumb'\nimport Aset from '@/imgs/aset1.png'\n\nconst WebBreadcrumbNew = ({ title }) => {\n    return (\n        <div className='web-bread-c'>\n            <WebBreadcrumb arr={[title]} />\n            <h3>{title}</h3>\n            <img src={Aset} className='aset' alt='aset' />\n        </div>\n    )\n}\n\nexport default WebBreadcrumbNew\n","import WebBreadcrumbNew from './WebBreadcrumbNew.jsx'\n\nexport default WebBreadcrumbNew\n"],"sourceRoot":""}