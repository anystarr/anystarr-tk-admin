{"version":3,"sources":["views/UserDetail/UserDetail.jsx","views/UserDetail/index.js","components/WebBreadcrumbNew/WebBreadcrumbNew.jsx","components/WebBreadcrumbNew/index.js"],"names":["layout","RangePicker","labelCol","span","wrapperCol","tailLayout","offset","Option","columns","title","dataIndex","key","align","render","text","item","Date","toLocaleString","sampleColumns","width","href","target","status","taskColumns","getLendTimeNew","submit_time","review_time","style","display","JSON","parse","map","url","index","console","log","test","src","controls","marginLeft","maxWidth","isJSON","DetailModalAddress","visible","onCreate","onCancel","formDataAddress","disabled","useForm","form","useState","countryList","state","setState","useEffect","APIGetCountryList","then","resp","data","setFieldsValue","id","name","contact_number","address","country","post_code","options","value","okText","cancelText","onOk","validateFields","values","resetFields","catch","info","Item","label","showSearch","DetailModal","formData","type","bankOptions","otherBank","initForm","resBank","countryBank","country_bank","account_address","full_name","swift_code","other_bank","transCountryBank","list","bank_list","country_name","country_id","children","APIgetBankList","rules","required","onChange","e","className","UserDetail","props","reviewContent","taskRecordList","userAddress","userPayAccount","password","actionLog","userID","visibleAddress","taskList","setTaskList","sampleList","setSampleList","match","params","APIGetUserDetail","user","invitation_code","email","country_list","nickname","gender","language","fb_name","user_social","ins_name","tiktok_name","user_pay_account","length","user_address","action_log","start_row","page_size","user_id","APIFindTasks","taskJson","stringify","res","getTaskList","APIGetSampleList","sampleOrderJson","getSampleList","bank_name","APICreateOrModifyAccount","payAccountJson","success","history","push","APICreateOrModifyAddress","userAddressJson","WebBreadcrumbNew","color","hear_about_us","paddingTop","initialValues","remember","onFinish","query","location","sessionStorage","getItem","APISetSocial","userSocialJson","htmlType","onClick","APIChangePassword","userJson","hoverable","actions","onConfirm","APIDelectPayAccount","DeleteOutlined","EditOutlined","APIDeleteAddress","marginBottom","dataSource","review_images","review_linkes","marginTop","textAlign","task_id","APIExamineTask","taskRecordJson","agreeExamClick","examClick","WebBreadcrumb","arr","Aset","alt"],"mappings":"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","file":"static/js/45.7ccdb045.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n    Layout,\n    Row,\n    Col,\n    Divider,\n    Select,\n    Form,\n    Input,\n    Button,\n    Checkbox,\n    message,\n    Switch,\n    DatePicker,\n    Upload,\n    Table,\n    Image,\n    Popconfirm,\n    Modal,\n    Cascader,\n    Descriptions,\n    Tag,\n    Badge,\n    Card\n} from 'antd'\nimport moment from 'moment'\nimport WebBreadcrumbNew from '@/components/WebBreadcrumbNew'\nimport '@/style/view-style/index.less'\nimport {\n    APIUploadFile,\n    APIExamineTask,\n    APIGetUserDetail,\n    APISetSocial,\n    APIChangePassword,\n    APIDelectPayAccount,\n    APIDeleteAddress,\n    APICreateOrModifyAddress,\n    APICreateOrModifyAccount,\n    APIgetBankList,\n    APIGetCountryList,\n    APIFindTasks,\n    APIGetSampleList\n} from '@/mapi'\nimport webhost from '@/tools/webhost.js'\n// import { withRouter } from \"react-router-dom\";\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons'\nimport { getLendTime, getLendTimeNew, isJSON } from '@/tools/help.js'\nimport 'braft-editor/dist/index.css'\nimport TextArea from 'antd/lib/input/TextArea'\nconst { RangePicker } = DatePicker\n\nconst layout = {\n    labelCol: {\n        span: 8\n    },\n    wrapperCol: {\n        span: 16\n    }\n}\nconst tailLayout = {\n    wrapperCol: {\n        offset: 10,\n        span: 16\n    }\n}\n\nconst rangeConfig = {\n    rules: [{ type: 'array', required: true, message: 'Please select time!' }]\n}\nconst config = {\n    rules: [\n        {\n            type: 'object',\n            required: true,\n            message: 'Please select time!'\n        }\n    ]\n}\n\nconst isVideo = str => {\n    return /^.+(\\.mp4|\\.avi|video|\\.mov|\\.rmvb|.flv)$/.test(str)\n}\n\nconst { Option } = Select\n\nconst template1 =\n    'step1: apply and receive exclusion discount code ; step2:share on social ; step3:Upload proof(Screenshots and links) to AnyStarr'\n\nconst columns = [\n    {\n        title: 'ID',\n        dataIndex: 'id',\n        key: 'id',\n        align: 'center'\n    },\n    {\n        title: 'Update Time',\n        dataIndex: 'create_time',\n        key: 'create_time',\n        align: 'center',\n        render: (text, item) => new Date(text).toLocaleString()\n    },\n    {\n        title: 'Action by',\n        dataIndex: 'action_by',\n        key: 'action_by',\n        align: 'center'\n    },\n    {\n        title: 'What is updated',\n        dataIndex: 'update',\n        key: 'update',\n        align: 'center'\n    }\n]\n\nconst sampleColumns = [\n    {\n        title: 'Task ID',\n        dataIndex: 'task_id',\n        key: 'task_id',\n        align: 'center',\n        width: '100'\n    },\n    {\n        title: 'Campaign title',\n        dataIndex: 'title',\n        key: 'title',\n        align: 'center'\n    },\n    {\n        title: 'Update date',\n        dataIndex: 'update_time',\n        key: 'update_time',\n        align: 'center'\n        // render: (text, item) => <div>{new Date(text).toLocaleString()}</div>\n    },\n    {\n        title: 'Username',\n        dataIndex: 'from_user',\n        key: 'from_user',\n        width: 100,\n        align: 'center'\n    },\n    {\n        title: 'Courier',\n        dataIndex: 'courier',\n        key: 'courier',\n        align: 'center'\n    },\n    {\n        title: 'Tracking number',\n        dataIndex: 'tracking_number',\n        key: 'tracking_number',\n        width: 100,\n        align: 'center',\n        render: (text, item) => (\n            <a href={`https://www.ydhex.com/tools/inquire?number=${text}`} target='_blank'>\n                {text}\n            </a>\n        )\n    },\n    {\n        title: 'Application status',\n        dataIndex: 'status',\n        key: 'status',\n        width: 160,\n        align: 'left',\n        render: (text, item) => (\n            <div>\n                <Badge status={text == 4 ? 'default' : 'success'} />\n                <span>{text == 1 ? 'New application' : text == 4 ? 'Closed' : text == 3 ? 'Approved' : 'Shipped'}</span>\n            </div>\n        )\n    }\n]\n\nconst taskColumns = [\n    {\n        title: 'Campaign title',\n        dataIndex: 'title',\n        key: 'title',\n        align: 'center'\n    },\n    {\n        title: 'Username',\n        dataIndex: 'user',\n        key: 'user',\n        width: '100',\n        align: 'center'\n    },\n    {\n        title: 'Application date',\n        dataIndex: 'create_time',\n        key: 'create_time',\n        width: '100',\n        align: 'center'\n    },\n    {\n        title: 'Leading time ',\n        dataIndex: 'update_time',\n        key: 'update_time',\n        width: '100',\n        align: 'center',\n        render: (text, item) => <div>{getLendTimeNew(item.submit_time, item.review_time)}</div>\n    },\n    {\n        title: '# of upload images',\n        dataIndex: 'images',\n        key: 'images',\n        align: 'center',\n        render: (text, item) => (\n            <div style={{ display: 'flex' }}>\n                {text &&\n                    JSON.parse(text).map((url, index) => {\n                        console.log('urlll,', url)\n                        if (isVideo(url)) {\n                            return (\n                                <video src={url} controls='controls' style={{ width: '100px', marginLeft: '10px' }}>\n                                    您的浏览器不支持 video 标签。\n                                </video>\n                            )\n                        } else {\n                            return <Image src={url} style={{ maxWidth: '70px', marginLeft: '10px' }} />\n                        }\n                    })}\n            </div>\n        )\n    },\n    {\n        title: 'Link',\n        dataIndex: 'linkes',\n        key: 'linkes',\n        align: 'center',\n        width: '100',\n        render: (text, item) => (\n            <div>\n                {isJSON(text)\n                    ? JSON.parse(text).map((url, index) => {\n                          return (\n                              <a href={url} target='_blank'>\n                                  {url}\n                              </a>\n                          )\n                      })\n                    : text}\n            </div>\n        )\n    },\n    {\n        title: 'Task status',\n        dataIndex: 'status',\n        width: 200,\n        key: 'status',\n        align: 'left',\n        render: (text, item) => (\n            <div>\n                <Badge status={text == 0 ? 'default' : 'success'} />\n                <span>\n                    {text == 0\n                        ? 'Task closed'\n                        : text == 1\n                        ? 'New Task'\n                        : text == 2\n                        ? 'Pending proof upload'\n                        : text == 3\n                        ? 'Pending for Review'\n                        : text == 4\n                        ? 'Resubmit evidence'\n                        : text == 5\n                        ? 'Task Approved'\n                        : text == 7\n                        ? 'Pending for Content Review'\n                        : text == 8\n                        ? 'Resubmit Content'\n                        : text == 9\n                        ? 'Pending proof upload'\n                        : ''}\n                </span>\n            </div>\n        )\n    }\n]\n\nconst DetailModalAddress = ({ visible, onCreate, onCancel, formDataAddress, disabled }) => {\n    const [form] = Form.useForm()\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 14 }\n    }\n\n    const [state, setState] = useState({\n        countryList: []\n    })\n\n    const initForm = () => {\n        form.setFieldsValue({\n            id: formDataAddress.id,\n            name: formDataAddress.name,\n            contact_number: formDataAddress.contact_number,\n            address: formDataAddress.address,\n            country: formDataAddress.country,\n            post_code: formDataAddress.post_code\n        })\n    }\n\n    const getCountry = () => {\n        APIGetCountryList().then(resp => {\n            setState({\n                ...state,\n                countryList: resp.data.data\n            })\n        })\n    }\n\n    useEffect(() => {\n        getCountry()\n        initForm()\n    }, [visible])\n\n    const options = state.countryList.map((item, index) => {\n        return (\n            <Option key={item.id} value={item.name}>\n                {item.name}\n            </Option>\n        )\n    })\n\n    return (\n        <Modal\n            visible={visible}\n            title='pay account detail'\n            okText='Submit'\n            cancelText='Cancel'\n            onCancel={onCancel}\n            onOk={() => {\n                form.validateFields()\n                    .then(values => {\n                        form.resetFields()\n                        onCreate(values)\n                    })\n                    .catch(info => {\n                        console.log('Validate Failed:', info)\n                    })\n            }}>\n            <Form {...layout} form={form} name='form_in_modal'>\n                <Form.Item label='ID' name='id'>\n                    <Input disabled />\n                </Form.Item>\n                <Form.Item label='Name' name='name'>\n                    <Input />\n                </Form.Item>\n                <Form.Item label='Contact Number' name='contact_number'>\n                    <Input />\n                </Form.Item>\n                <Form.Item label='Address' name='address'>\n                    <TextArea />\n                </Form.Item>\n                <Form.Item label='Country' name='country'>\n                    <Select showSearch>{options}</Select>\n                </Form.Item>\n                <Form.Item label='Post code' name='post_code'>\n                    <Input />\n                </Form.Item>\n            </Form>\n        </Modal>\n    )\n}\n\nconst DetailModal = ({ visible, onCreate, onCancel, formData, disabled }) => {\n    const [form] = Form.useForm()\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 14 }\n    }\n    const rangeConfig = {\n        rules: [\n            {\n                type: 'array',\n                message: 'Please select time!'\n            }\n        ]\n    }\n\n    const [state, setState] = useState({\n        type: 2,\n        bankOptions: [],\n        id: null,\n        otherBank: false\n    })\n\n    const changeType = e => {\n        console.log('e', e)\n        setState({\n            type: e\n        })\n    }\n\n    const getBanks = () => {\n        APIgetBankList().then(resp => {\n            let resBank = transCountryBank(resp.data.data)\n            initForm(resBank)\n        })\n    }\n\n    const initForm = resBank => {\n        console.log('resbank', resBank)\n        console.log('formData', formData)\n        let countryBank = formData.country_bank ? JSON.parse(formData.country_bank) : []\n        if (!formData.type) {\n            formData.type = 2\n        }\n        form.setFieldsValue({\n            id: formData.id,\n            type: formData.type,\n            account_address: formData.account_address,\n            full_name: formData.full_name,\n            country_bank: formData.country_bank ? JSON.parse(formData.country_bank) : [],\n            swift_code: formData.swift_code,\n            other_bank: countryBank[0] === 0 ? countryBank[1] : ''\n        })\n\n        setState({\n            ...state,\n            bankOptions: resBank,\n            type: formData.type,\n            id: formData.id ? formData.id : null,\n            otherBank: countryBank[0] === 0 ? true : false\n        })\n    }\n\n    const transCountryBank = list => {\n        return list.map(item => {\n            if (item.bank_list) {\n                return {\n                    label: item.country_name,\n                    value: item.country_id,\n                    children: transCountryBank(item.bank_list)\n                }\n            } else {\n                return {\n                    label: item.name,\n                    value: item.name\n                }\n            }\n        })\n    }\n\n    const changeBank = values => {\n        if (values[0] === 0) {\n            setState({\n                ...state,\n                otherBank: true\n            })\n        } else {\n            setState({\n                ...state,\n                otherBank: false\n            })\n        }\n    }\n\n    useEffect(() => {\n        getBanks()\n    }, [visible])\n\n    return (\n        <Modal\n            visible={visible}\n            title='pay account detail'\n            okText='Submit'\n            cancelText='Cancel'\n            onCancel={onCancel}\n            onOk={() => {\n                form.validateFields()\n                    .then(values => {\n                        form.resetFields()\n                        onCreate(values)\n                    })\n                    .catch(info => {\n                        console.log('Validate Failed:', info)\n                    })\n            }}>\n            <Form {...layout} form={form} name='form_in_modal'>\n                <Form.Item name='id' label='ID' rules={[{ required: true }]}>\n                    <Input disabled />\n                </Form.Item>\n                <Form.Item name='type' label='Type' rules={[{ required: true }]}>\n                    <Select onChange={changeType}>\n                        <Option value={1}>PayPal</Option>\n                        <Option value={2}>Bank</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item name='account_address' label='Account' rules={[{ required: true }]}>\n                    <Input />\n                </Form.Item>\n                {state.type == 2 ? (\n                    <div>\n                        <Form.Item label='Full Name' name='full_name'>\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item label='Country Bank' name='country_bank' className='bank-name'>\n                            <Cascader\n                                options={state.bankOptions}\n                                onChange={changeBank}\n                                // placeholder=\"Please select\"\n                            />\n                        </Form.Item>\n                        {state.otherBank ? (\n                            <Form.Item label='Other Bank' name='other_bank'>\n                                <Input />\n                            </Form.Item>\n                        ) : null}\n\n                        <Form.Item label='Swift Code' name='swift_code'>\n                            <Input />\n                        </Form.Item>\n                    </div>\n                ) : null}\n            </Form>\n        </Modal>\n    )\n}\n\nconst UserDetail = props => {\n    const [state, setState] = useState({\n        reviewContent: {},\n        taskRecordList: [],\n        visible: false,\n        formData: {},\n        userAddress: {},\n        userPayAccount: {},\n        password: '',\n        actionLog: [],\n        userID: '',\n\n        visibleAddress: false,\n        formDataAddress: {}\n    })\n    const [form] = Form.useForm()\n\n    const [taskList, setTaskList] = useState([])\n\n    const [sampleList, setSampleList] = useState([])\n\n    const onReset = () => {\n        form.resetFields()\n    }\n\n    const onFinish = values => {\n        let query =\n            props.location.query || (sessionStorage.getItem('query') ? JSON.parse(sessionStorage.getItem('query')) : {})\n        console.log('valuess', values)\n        console.log('query', query)\n        let userID = props.match.params.id\n        APISetSocial({\n            userSocialJson: JSON.stringify({\n                user_id: userID,\n                ins_name: values.ins_name,\n                fb_name: values.fb_name,\n                tiktok_name: values.tiktok_name\n            })\n        }).then(resp => {\n            message.success('success')\n            props.history.push('/account/account')\n        })\n    }\n\n    const initForm = () => {\n        let id = props.match.params.id\n        console.log('iddd', id)\n        APIGetUserDetail({ id: id }).then(resp => {\n            console.log('resp', resp)\n\n            form.setFieldsValue({\n                id: resp.data.data.user.id,\n                invitation_code: resp.data.data.user.invitation_code,\n                email: resp.data.data.user.email,\n                country_list: resp.data.data.user.country_list,\n                nickname: resp.data.data.user.nickname,\n                gender: resp.data.data.user.gender,\n                language: resp.data.data.user.language,\n\n                status: resp.data.data.user.status,\n                password: resp.data.data.user.password,\n                fb_name: resp.data.data.user_social.fb_name,\n                ins_name: resp.data.data.user_social.ins_name,\n                tiktok_name: resp.data.data.user_social.tiktok_name\n            })\n            setState({\n                ...state,\n                userPayAccount: resp.data.data.user_pay_account.length ? resp.data.data.user_pay_account[0] : {},\n                userAddress: resp.data.data.user_address.length ? resp.data.data.user_address[0] : {},\n                actionLog: resp.data.data.action_log,\n                userID: resp.data.data.user.id,\n                formData: resp.data.data\n            })\n        })\n    }\n\n    const setTaskDesValueTo = data => {\n        console.log('大医院', data)\n        let resArr = data.split(';')\n        console.log('resArrrrrr', resArr)\n    }\n\n    const uploadProps = {\n        name: 'file',\n        action: 'http://any.clubchopp.com/any-starr/common/upload/upload_pic',\n        withCredentials: true,\n        headers: {\n            authorization: 'authorization-text'\n        },\n        onChange(info) {\n            if (info.file.status !== 'uploading') {\n                console.log(info.file, info.fileList)\n            }\n            if (info.file.status === 'done') {\n                message.success(`${info.file.name} file uploaded successfully`)\n            } else if (info.file.status === 'error') {\n                message.error(`${info.file.name} file upload failed.`)\n            }\n        }\n    }\n\n    const deleteFile = index => {\n        let bannerList = state.bannerList\n        bannerList.splice(index, 1)\n        setState({\n            ...state,\n            bannerList: bannerList\n        })\n    }\n\n    const uploadFile = ({ file, onSuccess }) => {\n        // uid: '-1',\n        //     name: 'xxx.png',\n        //     status: 'done',\n        //     url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n        APIUploadFile({ file: file }).then(resp => {\n            onSuccess()\n            let bannerList = state.bannerList\n            let picUrl = resp.data.url\n            bannerList.push(picUrl)\n            setState({\n                ...state,\n                bannerList\n            })\n        })\n    }\n\n    const onCreateAddress = values => {\n        console.log('valuesss', values)\n\n        APICreateOrModifyAddress({\n            userAddressJson: JSON.stringify({\n                id: values.id,\n                user_id: state.userID,\n                name: values.name,\n                contact_number: values.contact_number,\n                address: values.address,\n                country: values.country,\n                post_code: values.post_code\n            })\n        }).then(resp => {\n            message.success('success')\n            props.history.push('/account/account')\n        })\n    }\n\n    const onCreate = values => {\n        console.log('values', values)\n        let params = {\n            id: values.id,\n            type: values.type,\n            user_id: state.userID,\n            account_address: values.account_address,\n            full_name: values.full_name,\n            bank_name: values.country_bank ? values.country_bank[1] : '',\n            swift_code: values.swift_code,\n            country_bank: values.country_bank\n        }\n        if (values.other_bank) {\n            params.bank_name = values.other_bank\n            params.country_bank = [0, values.otherBank]\n        }\n        APICreateOrModifyAccount({\n            payAccountJson: JSON.stringify(params)\n        }).then(resp => {\n            message.success('success')\n            props.history.push('/account/account')\n        })\n    }\n\n    const agreeExamClick = (state, status) => {\n        let params = {\n            id: state.reviewContent.id,\n            task_id: state.reviewContent.task_id,\n            status: status\n        }\n        APIExamineTask({ taskRecordJson: JSON.stringify(params) }).then(resp => {\n            message.success('success')\n            setState({\n                ...state,\n                visible: false\n            })\n            props.history.push('/tasks')\n        })\n    }\n\n    const examClick = (state, status) => {\n        console.log('state', state)\n        console.log('status', status)\n        setState({\n            ...state,\n            visible: true,\n            formData: {\n                id: state.reviewContent.id,\n                task_id: state.reviewContent.task_id,\n                status: status\n            }\n        })\n    }\n\n    const changePassword = () => {\n        let query =\n            props.location.query || (sessionStorage.getItem('query') ? JSON.parse(sessionStorage.getItem('query')) : {})\n        console.log('query', query)\n        APIChangePassword({\n            userJson: JSON.stringify({\n                id: query.id,\n                password: state.password\n            })\n        }).then(resp => {\n            message.success('修改成功')\n            props.history.push('/account/account')\n        })\n    }\n\n    const changePwd = e => {\n        console.log('e', e)\n        setState({\n            ...state,\n            password: e.target.value\n        })\n    }\n\n    const modifyPayAccount = data => {\n        console.log('data', data)\n        setState({\n            ...state,\n            visible: true,\n            formData: data\n        })\n    }\n\n    const deletePayAccount = data => {\n        console.log('data', data)\n        APIDelectPayAccount({\n            id: data.id\n        }).then(resp => {\n            props.history.push('/account/account')\n        })\n    }\n\n    const editUserAddress = data => {\n        setState({\n            ...state,\n            visibleAddress: true,\n            formDataAddress: data\n        })\n    }\n\n    const deleteUserAddress = data => {\n        APIDeleteAddress({\n            id: data.id\n        }).then(resp => {\n            props.history.push('/account/account')\n        })\n    }\n\n    const getTaskList = () => {\n        let params = {\n            start_row: 0,\n            page_size: 100,\n            user_id: props.match.params.id\n        }\n        APIFindTasks({ taskJson: JSON.stringify(params) }).then(res => {\n            setTaskList(res.data.list)\n        })\n    }\n\n    const getSampleList = () => {\n        let params = {\n            start_row: 0,\n            page_size: 100,\n            user_id: props.match.params.id\n        }\n        APIGetSampleList({ sampleOrderJson: JSON.stringify(params) }).then(resp => {\n            setSampleList(resp.data.list)\n        })\n    }\n\n    useEffect(() => {\n        // getCountryList()\n        initForm()\n        getTaskList()\n        getSampleList()\n    }, [])\n\n    return (\n        <Layout className='index animated fadeIn'>\n            <DetailModal\n                visible={state.visible}\n                onCreate={onCreate}\n                onCancel={() => {\n                    setState({ ...state, visible: false })\n                }}\n                formData={state.formData}\n                disabled={state.disabled}\n            />\n            <DetailModalAddress\n                visible={state.visibleAddress}\n                onCreate={onCreateAddress}\n                onCancel={() => {\n                    setState({ ...state, visibleAddress: false })\n                }}\n                formDataAddress={state.formDataAddress}\n            />\n            <WebBreadcrumbNew title='User Detail' />\n            <div className='base-style base-detail' id='demoline'>\n                <Row>\n                    <Col span={24}>\n                        <Descriptions title='User Info'>\n                            <Descriptions.Item label='User ID'>{state.userID}</Descriptions.Item>\n                            <Descriptions.Item label='Invitation code'>\n                                {state.formData.user && state.formData.user.invitation_code}\n                            </Descriptions.Item>\n                            <Descriptions.Item label='Username(email)'>\n                                {state.formData.user && state.formData.user.email}\n                            </Descriptions.Item>\n                            <Descriptions.Item label='Distribution countries'>\n                                {state.formData.user &&\n                                    state.formData.user.country_list &&\n                                    JSON.parse(state.formData.user.country_list).map((item, index) => {\n                                        return (\n                                            <Tag color='geekblue' key={item}>\n                                                {item}\n                                            </Tag>\n                                        )\n                                    })}\n                            </Descriptions.Item>\n                            <Descriptions.Item label='Name'>\n                                {state.formData.user && state.formData.user.nickname}\n                            </Descriptions.Item>\n                            <Descriptions.Item label='Gender'>\n                                {state.formData.user && state.formData.user.gender == 1\n                                    ? 'Male'\n                                    : state.formData.user && state.formData.user.gender == 2\n                                    ? 'Female'\n                                    : state.formData.user && state.formData.user.gender == 0\n                                    ? 'Perfer not to say'\n                                    : ''}\n                            </Descriptions.Item>\n                            <Descriptions.Item label='Language'>\n                                {state.formData.user && state.formData.user.language}\n                            </Descriptions.Item>\n                            <Descriptions.Item label='Acquisition channel'>\n                                {state.formData.user && state.formData.user.hear_about_us}\n                            </Descriptions.Item>\n                            <Descriptions.Item label='User status'>\n                                {state.formData.user ? (\n                                    <div>\n                                        <Badge\n                                            status={\n                                                state.formData.user.status == 1\n                                                    ? 'success'\n                                                    : state.formData.user.status == 6\n                                                    ? 'processing'\n                                                    : state.formData.user.status == 3\n                                                    ? 'error'\n                                                    : 'default'\n                                            }\n                                        />\n                                        <span>\n                                            {state.formData.user.status == 1\n                                                ? 'Active'\n                                                : state.formData.user.status == 2\n                                                ? 'Banne'\n                                                : state.formData.user.status == 3\n                                                ? 'DELETED'\n                                                : state.formData.user.status == 4\n                                                ? 'INACTIVE'\n                                                : state.formData.user.status == 5\n                                                ? 'LOCKED'\n                                                : state.formData.user.status == 6\n                                                ? 'Created'\n                                                : ''}\n                                        </span>\n                                    </div>\n                                ) : null}\n                            </Descriptions.Item>\n                        </Descriptions>\n                    </Col>\n                </Row>\n            </div>\n\n            <div className='base-style base-detail' style={{ paddingTop: '60px' }}>\n                <Row>\n                    <Col span={24}>\n                        <Form\n                            {...layout}\n                            name='basic'\n                            initialValues={{\n                                remember: true\n                            }}\n                            onFinish={onFinish}\n                            form={form}>\n                            <Row>\n                                <Col span={12}>\n                                    <Form.Item label='Username in Facebook' name='fb_name'>\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={12}>\n                                    <Form.Item label='Username in Instagram' name='ins_name'>\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col span={12}>\n                                    <Form.Item label='Username in Tiktok' name='tiktok_name'>\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <Form.Item {...tailLayout}>\n                                <div>\n                                    <Button type='primary' htmlType='submit' style={{ marginLeft: '30px' }}>\n                                        Save\n                                    </Button>\n                                    <Button htmlType='button' onClick={onReset} style={{ marginLeft: '30px' }}>\n                                        Reset\n                                    </Button>\n                                </div>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n\n            <div className='base-style base-detail'>\n                <div className='task-review-content'>\n                    <h3 style={{ width: 180 }}>password:</h3>\n                    <Input style={{ width: '300px', marginLeft: '30px' }} onChange={changePwd} />\n                    <Button type='primary' onClick={changePassword} style={{ marginLeft: '30px' }}>\n                        Save\n                    </Button>\n                </div>\n            </div>\n\n            <div className='base-style base-detail'>\n                <div className='task-review-content'>\n                    <h3 style={{ width: 180 }}>user pay acount:</h3>\n                    {state.userPayAccount.bank_name ? (\n                        <Card\n                            style={{ width: 300, marginLeft: 30 }}\n                            hoverable\n                            actions={[\n                                <Popconfirm\n                                    title='Are you sure to delete ?'\n                                    onConfirm={() => {\n                                        deletePayAccount(state.userPayAccount)\n                                    }}\n                                    // onCancel={cancel}\n                                    okText='Yes'\n                                    cancelText='No'>\n                                    <DeleteOutlined key='delete' />\n                                </Popconfirm>,\n                                <EditOutlined\n                                    key='edit'\n                                    onClick={() => {\n                                        modifyPayAccount(state.userPayAccount)\n                                    }}\n                                />\n                            ]}>\n                            <div>Bank name: {state.userPayAccount.bank_name}</div>\n                            <div>Your account: {state.userPayAccount.account_address}</div>\n                        </Card>\n                    ) : null}\n                </div>\n            </div>\n            <div className='base-style base-detail'>\n                <div className='task-review-content'>\n                    <h3 style={{ width: 180 }}>user address:</h3>\n                    {state.userAddress.address ? (\n                        <Card\n                            style={{ width: 300, marginLeft: 30 }}\n                            hoverable\n                            actions={[\n                                <Popconfirm\n                                    title='Are you sure to delete ?'\n                                    onConfirm={() => {\n                                        deleteUserAddress(state.userAddress)\n                                    }}\n                                    // onCancel={cancel}\n                                    okText='Yes'\n                                    cancelText='No'>\n                                    <DeleteOutlined key='delete' />\n                                </Popconfirm>,\n                                <EditOutlined\n                                    key='edit'\n                                    onClick={() => {\n                                        editUserAddress(state.userAddress)\n                                    }}\n                                />\n                            ]}>\n                            <div>address:{state.userAddress.address}</div>\n                            <div>contact number:{state.userAddress.contact_number}</div>\n                            <div>country:{state.userAddress.country}</div>\n                            <div>user name:{state.userAddress.name}</div>\n                            <div>post code:{state.userAddress.post_code}</div>\n                        </Card>\n                    ) : null}\n                </div>\n            </div>\n\n            <div className='base-style base-detail' id='demoline'>\n                <h3 style={{ marginBottom: '10px' }}>action logs</h3>\n                <Row>\n                    <Col span={24}>\n                        <Table columns={columns} dataSource={state.actionLog} />\n                    </Col>\n                </Row>\n            </div>\n\n            <div className='base-style base-detail' id='demoline'>\n                <h3 style={{ marginBottom: '10px' }}>sample list</h3>\n                <Row>\n                    <Col span={24}>\n                        <Table columns={sampleColumns} dataSource={sampleList} />\n                    </Col>\n                </Row>\n            </div>\n\n            <div className='base-style base-detail' id='demoline'>\n                <h3 style={{ marginBottom: '10px' }}>task list</h3>\n                <Row>\n                    <Col span={24}>\n                        <Table columns={taskColumns} dataSource={taskList} />\n                    </Col>\n                </Row>\n            </div>\n\n            {state.reviewContent && state.reviewContent.status == 3 ? (\n                <div className='base-style' id='demoline'>\n                    <div className='task-review-content'>\n                        <div>upload imgs:</div>\n                        <div style={{ marginLeft: '20px' }}>\n                            {/* {state.reviewContent && state.reviewContent.review_images} */}\n                            {state.reviewContent &&\n                                state.reviewContent.review_images &&\n                                state.reviewContent.review_images.map((item, index) => {\n                                    return <Image key={index} width={200} src={item} />\n                                })}\n                        </div>\n                    </div>\n                    <div className='task-review-content'>\n                        <div>links:</div>\n                        <div style={{ marginLeft: '20px' }}>\n                            {/* {state.reviewContent && state.reviewContent.review_linkes} */}\n                            {state.reviewContent &&\n                                state.reviewContent.review_linkes &&\n                                state.reviewContent.review_linkes.map((item, index) => {\n                                    return (\n                                        <a key={index} href={item} target='_blank'>\n                                            {item}\n                                        </a>\n                                    )\n                                })}\n                        </div>\n                    </div>\n                    {state.reviewContent.status == '4' || state.reviewContent.status == '5' ? null : (\n                        <div style={{ marginTop: '20px', textAlign: 'center' }}>\n                            <Button\n                                type='primary'\n                                onClick={() => {\n                                    agreeExamClick(state, '5')\n                                }}>\n                                Approve\n                            </Button>\n                            <Button\n                                type='dashed'\n                                onClick={() => {\n                                    examClick(state, '4')\n                                }}\n                                style={{ marginLeft: '20px' }}>\n                                Reject\n                            </Button>\n                        </div>\n                    )}\n                </div>\n            ) : null}\n\n            {/* <div className='base-style' id='demoline'>\n                <Row>\n                    <Col span={24}>\n                        <Table columns={columns} dataSource={state.taskRecordList} />\n                    </Col>\n                </Row>\n            </div> */}\n        </Layout>\n    )\n}\n\n// export default withRouter(CreateArea);\nexport default UserDetail\n","import UserDetail from './UserDetail.jsx'\n\nexport default UserDetail","import React, { Component, useEffect, useState } from 'react'\nimport { Table, Button, Modal, Checkbox } from 'antd'\nimport WebBreadcrumb from '../WebBreadcrumb'\nimport Aset from '@/imgs/aset1.png'\n\nconst WebBreadcrumbNew = ({ title }) => {\n    return (\n        <div className='web-bread-c'>\n            <WebBreadcrumb arr={[title]} />\n            <h3>{title}</h3>\n            <img src={Aset} className='aset' alt='aset' />\n        </div>\n    )\n}\n\nexport default WebBreadcrumbNew\n","import WebBreadcrumbNew from './WebBreadcrumbNew.jsx'\n\nexport default WebBreadcrumbNew\n"],"sourceRoot":""}