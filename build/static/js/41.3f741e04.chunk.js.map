{"version":3,"sources":["api/index.js","views/AddRole/AddRole.jsx","views/AddRole/index.js","api/config.js","components/WebBreadcrumbNew/WebBreadcrumbNew.jsx","components/WebBreadcrumbNew/index.js"],"names":["token","localStorage","getItem","request","axios","create","baseURL","BASEURL","timeout","defaults","headers","post","interceptors","use","config","Authorization","error","Promise","reject","response","status","resolve","console","log","layout","RangePicker","labelCol","span","wrapperCol","tailLayout","offset","Option","MerchantDetail","props","useState","id","fullName","displayName","logo","allPermissionsList","selectPermissions","state","setState","useForm","form","getRoleNeedPermissions","APIGetRoleNeedPermissions","then","resp","match","params","APIGetRoleDetail","setFieldsValue","name","data","description","descrption","rolePermissionList","role_permission_list","rolePList","map","item","permission_list","itemm","push","initForm","useEffect","className","WebBreadcrumbNew","title","initialValues","remember","onFinish","values","admin","permission_ids","APICreateOrModifyRole","roleJson","JSON","stringify","history","onFinishFailed","errorInfo","Item","label","key","value","style","width","margin","border","padding","display","marginBottom","backgroundColor","minWidth","textAlign","flex","paddingLeft","flexWrap","justifyContent","index","modular","indexm","onChange","selectId","includes","indexOf","splice","checkFeature","checked","type","htmlType","marginTop","AddRole","WebBreadcrumb","arr","src","Aset","alt"],"mappings":"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","file":"static/js/41.3f741e04.chunk.js","sourcesContent":["import axios from 'axios';\n\nimport { BASEURL } from '@/api/config'\n\n// 这里取决于登录的时候将 token 存储在哪里\nconst token = localStorage.getItem('token');\n\nconst request = axios.create({\n    baseURL: BASEURL,\n    timeout: 5000\n})\n\n// 设置post请求头\nrequest.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'\n\n// 添加请求拦截器\nrequest.interceptors.request.use(\n    config => {\n        // 将 token 添加到请求头\n        token && (config.headers.Authorization = token)\n        return config\n    },\n    error => {\n        return Promise.reject(error)\n    }\n)\n\n// 添加响应拦截器\nrequest.interceptors.response.use(\n    response => {\n        if (response.status === 200) {\n            return Promise.resolve(response)\n        } else {\n            return Promise.reject(response)\n        }\n    },\n    error => {\n        // 相应错误处理\n        // 比如： token 过期， 无权限访问， 路径不存在， 服务器问题等\n        if(error.response && error.response.status) {\n            switch (error.response.status) {\n                case 401:\n                    break\n                case 403:\n                    break\n                case 404:\n                    break\n                case 500:\n                    break\n                default:\n                    console.log('其他错误信息')\n            }\n        }\n        return Promise.reject(error)\n    }\n)\n\nexport default request\n","import React, { useState, useEffect } from 'react'\nimport {\n    Layout,\n    Row,\n    Col,\n    Divider,\n    Select,\n    Form,\n    Input,\n    Button,\n    Checkbox,\n    message,\n    Switch,\n    DatePicker,\n    Upload\n} from 'antd'\nimport moment from 'moment'\nimport WebBreadcrumbNew from '@/components/WebBreadcrumbNew'\nimport '@/style/view-style/index.less'\nimport {\n    APIcreateArea,\n    APIGetCountryList,\n    APICreateModifyCampaign,\n    APIUploadFile,\n    APIUploadPromoCode,\n    APICreateOrModifyMerchant,\n    APIGetRoleNeedPermissions,\n    APICreateOrModifyRole,\n    APIGetRoleDetail\n} from '@/mapi'\nimport axios from '@/api'\nimport { API } from '@/api/config'\n// import { withRouter } from \"react-router-dom\";\nimport { UploadOutlined, InboxOutlined, DeleteOutlined } from '@ant-design/icons'\nimport BraftEditor from 'braft-editor'\nimport 'braft-editor/dist/index.css'\nimport { type } from 'koa/lib/request'\nconst { RangePicker } = DatePicker\n\nconst layout = {\n    labelCol: {\n        span: 8\n    },\n    wrapperCol: {\n        span: 16\n    }\n}\nconst tailLayout = {\n    wrapperCol: {\n        offset: 10,\n        span: 16\n    }\n}\n\nconst rangeConfig = {\n    rules: [{ type: 'array', required: true, message: 'Please select time!' }]\n}\nconst config = {\n    rules: [\n        {\n            type: 'object',\n            required: true,\n            message: 'Please select time!'\n        }\n    ]\n}\n\nconst { Option } = Select\n\nconst template1 =\n    'step1: apply and receive exclusion discount code ; step2:share on social ; step3:Upload proof(Screenshots and links) to AnyStarr'\n\nconst MerchantDetail = props => {\n    const [state, setState] = useState({\n        id: '12',\n        fullName: 'hhh',\n        displayName: 'display',\n        logo: '',\n\n        allPermissionsList: [],\n        selectPermissions: []\n    })\n    const [form] = Form.useForm()\n\n    const onFinish = values => {\n        let id = props.match.params.id\n        let params = {\n            name: values.name,\n            admin: values.name === 'Super admin' ? 1 : 0,\n            descrption: values.description,\n            permission_ids: state.selectPermissions\n        }\n        if (id != 0) {\n            params.id = id\n        }\n        APICreateOrModifyRole({\n            roleJson: JSON.stringify(params)\n        }).then(resp => {\n            props.history.push('/permissions/role')\n        })\n    }\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo)\n        // this.props.history.push(\"/index\");\n    }\n\n    const initForm = allPermissionsList => {\n        let id = props.match.params.id\n        if (id == 0) {\n            setState({\n                ...state,\n                allPermissionsList: allPermissionsList\n            })\n            return\n        }\n\n        APIGetRoleDetail({ id: id }).then(resp => {\n            form.setFieldsValue({\n                name: resp.data.data.name,\n                description: resp.data.data.descrption\n            })\n            let rolePermissionList = resp.data.data.role_permission_list ? resp.data.data.role_permission_list : []\n            let rolePList = []\n            rolePermissionList.map(item => {\n                return item.permission_list.map(itemm => {\n                    rolePList.push(itemm.id)\n                })\n            })\n\n            setState({\n                ...state,\n                allPermissionsList: allPermissionsList,\n                selectPermissions: rolePList\n            })\n            console.log('rolePList', rolePList)\n        })\n    }\n\n    const getRoleNeedPermissions = () => {\n        APIGetRoleNeedPermissions().then(resp => {\n            let allPermissionsList = resp.data.data\n            // setState({\n            //     ...state,\n            //     allPermissionsList: resp.data.data\n            // })\n            initForm(allPermissionsList)\n        })\n    }\n\n    const checkFeature = data => {\n        console.log('data', data)\n        let selectPermissions = state.selectPermissions\n        let selectId = data.id\n        if (selectPermissions.includes(selectId)) {\n            console.log('1')\n\n            let index = selectPermissions.indexOf(selectId)\n            selectPermissions.splice(index, 1)\n            setState({\n                ...state,\n                selectPermissions: selectPermissions\n            })\n        } else {\n            console.log('2')\n            selectPermissions.push(selectId)\n            setState({\n                ...state,\n                selectPermissions: selectPermissions\n            })\n        }\n    }\n\n    useEffect(() => {\n        // getCountryList()\n\n        getRoleNeedPermissions()\n    }, [])\n\n    return (\n        <Layout className='index animated fadeIn'>\n            <WebBreadcrumbNew title='Role info' />\n            <div className='base-style base-detail' id='demoline'>\n                <Row>\n                    <Col span={24}>\n                        <Form\n                            {...layout}\n                            name='basic'\n                            initialValues={{\n                                remember: true\n                            }}\n                            form={form}\n                            onFinish={onFinish}\n                            onFinishFailed={onFinishFailed}>\n                            <Row>\n                                <Col span={12}>\n                                    <Form.Item label='Role Name' name='name'>\n                                        <Select>\n                                            <Option key='Super admin' value='Super admin'>\n                                                Super admin\n                                            </Option>\n                                            <Option key='Operation Manager' value='Operation Manager'>\n                                                Operation Manager\n                                            </Option>\n                                            <Option key='Operation' value='Operation'>\n                                                Operation\n                                            </Option>\n                                            <Option key='Marketing' value='Marketing'>\n                                                Marketing\n                                            </Option>\n                                            <Option key='Customer service' value='Customer service'>\n                                                Customer service\n                                            </Option>\n                                            <Option key='Accountant' value='Accountant'>\n                                                Accountant\n                                            </Option>\n                                            <Option key='Product' value='Product'>\n                                                Product\n                                            </Option>\n                                            <Option key='Logistic' value='Logistic'>\n                                                Logistic\n                                            </Option>\n                                            <Option key='Intern' value='Intern'>\n                                                Intern\n                                            </Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12}>\n                                    <Form.Item label='Description' name='description'>\n                                        <Input />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col\n                                    style={{\n                                        width: '79%',\n                                        margin: '0 auto',\n                                        border: '2px dashed #eee',\n                                        padding: '30px'\n                                    }}>\n                                    <div>\n                                        <div\n                                            style={{\n                                                display: 'flex',\n                                                marginBottom: '20px',\n                                                backgroundColor: '#eee',\n                                                padding: '10px 0 10px 0'\n                                            }}>\n                                            <div style={{ minWidth: '400px', textAlign: 'center' }}>\n                                                Function module\n                                            </div>\n                                            <div\n                                                style={{\n                                                    flex: 1,\n                                                    paddingLeft: '40px',\n                                                    display: 'flex',\n                                                    flexWrap: 'wrap',\n                                                    justifyContent: 'center'\n                                                }}>\n                                                Features\n                                            </div>\n                                        </div>\n                                        {state.allPermissionsList.map((item, index) => {\n                                            return (\n                                                <div style={{ display: 'flex', marginBottom: '20px' }} key={index}>\n                                                    {/* <div className=\"module\" style={{minWidth:'400px' }}><Checkbox>{item.modular}</Checkbox> </div> */}\n                                                    <div\n                                                        className='module'\n                                                        style={{ minWidth: '400px', textAlign: 'center' }}>\n                                                        {item.modular}\n                                                    </div>\n                                                    <div\n                                                        style={{\n                                                            flex: 1,\n                                                            paddingLeft: '40px',\n                                                            display: 'flex',\n                                                            flexWrap: 'wrap'\n                                                        }}\n                                                        className='feature'>\n                                                        {item.permission_list.map((itemm, indexm) => {\n                                                            return (\n                                                                <div key={indexm} style={{ minWidth: '230px' }}>\n                                                                    <Checkbox\n                                                                        onChange={() => {\n                                                                            checkFeature(itemm)\n                                                                        }}\n                                                                        checked={state.selectPermissions.includes(\n                                                                            itemm.id\n                                                                        )}>\n                                                                        {itemm.descrption}\n                                                                    </Checkbox>\n                                                                </div>\n                                                            )\n                                                        })}\n                                                    </div>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Form.Item {...tailLayout}>\n                                <div>\n                                    <Button type='primary' htmlType='submit' style={{ marginTop: '30px' }}>\n                                        Save\n                                    </Button>\n                                </div>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        </Layout>\n    )\n}\n\nexport default MerchantDetail\n","import AddRole from './AddRole.jsx'\n\nexport default AddRole","export const API = 'http://149.28.152.251:9001/v1'\n\nexport const BASEURL = 'http://149.28.152.251:9001/v1'\n","import React, { Component, useEffect, useState } from 'react'\nimport { Table, Button, Modal, Checkbox } from 'antd'\nimport WebBreadcrumb from '../WebBreadcrumb'\nimport Aset from '@/imgs/aset1.png'\n\nconst WebBreadcrumbNew = ({ title }) => {\n    return (\n        <div className='web-bread-c'>\n            <WebBreadcrumb arr={[title]} />\n            <h3>{title}</h3>\n            <img src={Aset} className='aset' alt='aset' />\n        </div>\n    )\n}\n\nexport default WebBreadcrumbNew\n","import WebBreadcrumbNew from './WebBreadcrumbNew.jsx'\n\nexport default WebBreadcrumbNew\n"],"sourceRoot":""}