{"version":3,"sources":["views/KolPersona/KolPersona.jsx","views/KolPersona/index.js","../node_modules/@ant-design/icons-svg/es/asn/SearchOutlined.js","../node_modules/@ant-design/icons/es/icons/SearchOutlined.js"],"names":["Option","MonthPicker","RangePicker","config","rules","type","required","message","columns","label","value","map","option","index","key","edit","title","dataIndex","align","render","text","item","className","onClick","user_id","externalInfo","language","app_name","searchLayout","labelCol","span","wrapperCol","SearchBar","props","useForm","form","name","onFinish","values","changeSearch","gutter","Item","style","textAlign","icon","SearchOutlined","htmlType","loading","margin","resetFields","DownloadModal","visible","onCreate","onCancel","formData","disabled","okText","cancelText","onOk","validateFields","then","catch","info","console","log","showTime","format","DetailModal","useState","useEffect","Object","keys","length","setFieldsValue","SearchTableView","list","pagination","current","pageSize","search","aVisible","aFormData","bVisible","bFormData","dVisible","dFormData","state","setState","data","params","page_size","getList","limit","offset","APIGetKolPersona","resp","page","records","getKeyList","total","err","rowSelection","onChange","selectedRowKeys","selectedRows","getCheckboxProps","record","begin_date","end_date","APIDownloadInvitecode","Referral_code_json","JSON","stringify","res","success","APICreateInvitecode","ReferralCodeJson","WebBreadcrumb","arr","src","Aset","marginBottom","url","webhost","window","open","focus","bordered","rowKey","scroll","scrollToFirstRowOnChange","x","dataSource","KolPersona","ref","React","AntdIcon","assign","SearchOutlinedSvg","displayName"],"mappings":"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","file":"static/js/54.67504d9b.chunk.js","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\nimport WebBreadcrumb from '@/components/WebBreadcrumb'\nimport { Layout, Row, Col, Tag, Table, Button, Modal, Input, Form, DatePicker, Select, message, Upload } from 'antd'\nimport '@/style/view-style/table.less'\nimport {\n    APIgetList,\n    APIrewardApplicationList,\n    APIrewardApplicationHandle,\n    APIexportRewardRecord,\n    APIGetUserList,\n    APIGetInvitecodeList,\n    APICreateInvitecode,\n    APIBatchCreateInvitecode,\n    APIDownloadInvitecode,\n    APIGetReferralCode,\n    APIGetKolPersona\n} from '@/mapi'\nimport { getKeyList } from '@/tools/action.js'\nimport moment from 'moment'\nimport Aset from '@/imgs/aset1.png'\nimport { MinusCircleOutlined, CheckCircleOutlined, SearchOutlined, CloudDownloadOutlined } from '@ant-design/icons'\nimport HeaderC from '@/components/HeaderC'\nimport webhost from '@/tools/webhost.js'\nimport { search } from 'koa/lib/request'\n\nconst { MonthPicker, RangePicker } = DatePicker\nconst { Option } = Select\n\nconst config = {\n    rules: [\n        {\n            type: 'object',\n            required: true,\n            message: 'Please select time!'\n        }\n    ]\n}\nconst typeList = [\n    { label: '待处理', value: 'to_handle' },\n    { label: '已处理', value: 'handled' }\n]\n\nconst TypeOptions = typeList.map((option, index) => {\n    return (\n        <Option key={index} value={option.value}>\n            {option.label}\n        </Option>\n    )\n})\n\nconst getLocalTime = nS => {\n    return new Date(parseInt(nS) * 1000).toLocaleString().replace(/:\\d{1,2}$/, ' ')\n}\n\nconst columns = edit => [\n    {\n        title: 'id',\n        dataIndex: 'id',\n        key: 'id',\n        align: 'center',\n        render: (text, item) => (\n            <span\n                className='table-id pointer'\n                onClick={() => {\n                    edit(item.user_id)\n                }}>\n                {text}\n            </span>\n        )\n    },\n    {\n        title: 'Account Type',\n        dataIndex: 'account_type',\n        key: 'account_type',\n        align: 'center'\n    },\n    {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n        align: 'center'\n    },\n    {\n        title: 'language',\n        dataIndex: 'language',\n        key: 'language',\n        align: 'center',\n        render: (text, item) => <span>{item.externalInfo.language}</span>\n    },\n    {\n        title: 'ins handle',\n        dataIndex: 'app_name',\n        key: 'app_name',\n        align: 'center',\n        render: (text, item) => <span>{item.app_name}</span>\n    },\n    // {\n    //     title: 'App Name',\n    //     dataIndex: 'app_name',\n    //     key: 'app_name',\n    //     align: 'center'\n    // },\n    // {\n    //     title: 'Edge Count',\n    //     dataIndex: 'app_name',\n    //     key: 'app_name',\n    //     align: 'center'\n    // },\n    {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email',\n        align: 'center'\n    },\n    {\n        title: 'Followers',\n        dataIndex: 'followed',\n        key: 'followed',\n        align: 'center'\n    },\n    {\n        title: 'Following',\n        dataIndex: 'following',\n        key: 'following',\n        align: 'center'\n    },\n    {\n        title: 'Full name',\n        dataIndex: 'full_name',\n        key: 'full_name',\n        align: 'center'\n    },\n    {\n        title: 'Gender',\n        dataIndex: 'gender',\n        key: 'gender',\n        align: 'center'\n    },\n    {\n        title: 'Ins Category',\n        dataIndex: 'ins_category',\n        key: 'ins_category',\n        align: 'center'\n    },\n    {\n        title: 'Location',\n        dataIndex: 'location',\n        key: 'location',\n        align: 'center'\n    }\n]\n\nconst searchLayout = {\n    labelCol: {\n        span: 8\n    },\n    wrapperCol: {\n        span: 16\n    }\n}\n\nconst SearchBar = props => {\n    const [form] = Form.useForm()\n\n    const onFinish = values => {\n        props.changeSearch(values)\n    }\n\n    return (\n        <Form\n            {...searchLayout}\n            form={form}\n            name='advanced_search'\n            className='ant-advanced-search-form'\n            onFinish={onFinish}>\n            <Row gutter={24}>\n                <Col span={8}>\n                    <Form.Item name='nickName' label='ins handle'>\n                        <Input />\n                    </Form.Item>\n                </Col>\n                <Col span={8}>\n                    <Form.Item name='email' label='Email'>\n                        <Input />\n                    </Form.Item>\n                </Col>\n                <Col span={8}>\n                    <Form.Item name='minNum' label='Minimum Followers'>\n                        <Input />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row gutter={24}>\n                <Col span={8}>\n                    <Form.Item name='maxNum' label='Maximum Followers'>\n                        <Input />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={24} style={{ textAlign: 'right' }}>\n                    <Button icon={<SearchOutlined />} type='primary' htmlType='submit' loading={props.loading}>\n                        Search\n                    </Button>\n                    <Button\n                        style={{ margin: '0 8px' }}\n                        onClick={() => {\n                            form.resetFields()\n                        }}>\n                        Reset\n                    </Button>\n                </Col>\n            </Row>\n        </Form>\n    )\n}\n\nconst DownloadModal = ({ visible, onCreate, onCancel, formData, disabled }) => {\n    const [form] = Form.useForm()\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 14 }\n    }\n    const rangeConfig = {\n        rules: [\n            {\n                type: 'array',\n                message: 'Please select time!'\n            }\n        ]\n    }\n\n    return (\n        <Modal\n            visible={visible}\n            title='download '\n            okText='Submit'\n            cancelText='Cancel'\n            onCancel={onCancel}\n            onOk={() => {\n                form.validateFields()\n                    .then(values => {\n                        form.resetFields()\n                        onCreate(values)\n                    })\n                    .catch(info => {\n                        console.log('Validate Failed:', info)\n                    })\n            }}>\n            <Form {...layout} form={form} name='form_in_modal'>\n                <Form.Item label='User Name' name='user_name'>\n                    <Input />\n                </Form.Item>\n                <Form.Item label='Type' name='type'>\n                    <Select>\n                        <Option value={1}>Email</Option>\n                        <Option value={2}>Ins</Option>\n                        <Option value={3}>facebook</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item name='begin_date' label='Begin Time' {...config}>\n                    <DatePicker showTime format='YYYY-MM-DD HH:mm:ss' />\n                </Form.Item>\n                <Form.Item name='end_date' label='End Time' {...config}>\n                    <DatePicker showTime format='YYYY-MM-DD HH:mm:ss' />\n                </Form.Item>\n            </Form>\n        </Modal>\n    )\n}\n\nconst DetailModal = ({ visible, onCreate, onCancel, formData, disabled }) => {\n    const [form] = Form.useForm()\n\n    const [user, setUser] = useState({})\n    const [allMemVisible, setAllMemVisible] = useState(false)\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 14 }\n    }\n    const rangeConfig = {\n        rules: [\n            {\n                type: 'array',\n                message: 'Please select time!'\n            }\n        ]\n    }\n\n    useEffect(() => {\n        if (Object.keys(formData).length) {\n            form.setFieldsValue(formData)\n        } else {\n            form.resetFields()\n        }\n    }, [])\n\n    const onGenderChange = value => {\n        form.setFieldsValue({ Gender: value })\n    }\n\n    const onCreateNew = val => {\n        setUser(val)\n        setAllMemVisible(false)\n        form.setFieldsValue({\n            user_id: val.user_id\n        })\n    }\n\n    return (\n        <Modal\n            visible={visible}\n            title='Generate Referral code'\n            okText='Submit'\n            cancelText='Cancel'\n            onCancel={onCancel}\n            onOk={() => {\n                form.validateFields()\n                    .then(values => {\n                        form.resetFields()\n                        onCreate(values)\n                    })\n                    .catch(info => {\n                        console.log('Validate Failed:', info)\n                    })\n            }}>\n            <Form {...layout} form={form} name='form_in_modal'>\n                <Form.Item name='type' label='Type'>\n                    <Select>\n                        <Option value='email'>email</Option>\n                        <Option value='ins'>ins</Option>\n                        <Option value='fb'>fb</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item name='user_name' label='User Name' rules={[{ required: true }]}>\n                    <Input />\n                </Form.Item>\n            </Form>\n        </Modal>\n    )\n}\n\nconst SearchTableView = () => {\n    const [state, setState] = useState({\n        list: [],\n        pagination: {\n            current: 1,\n            pageSize: 10\n        },\n        search: {},\n        loading: true,\n        visible: false,\n        disabled: false,\n        formData: {},\n        aVisible: false,\n        aFormData: {},\n        bVisible: false,\n        bFormData: {},\n\n        dVisible: false,\n        dFormData: {}\n    })\n    const [handleState, setHandleState] = useState({\n        visible: false,\n        data: {}\n    })\n    useEffect(() => {\n        const { pagination } = state\n        const params = { current: 1, page_size: state.pagination.pageSize }\n        getList(params)\n    }, [])\n\n    const getList = params => {\n        console.log('params getList', params)\n        const { pagination, search } = state\n        params = {\n            ...params,\n            limit: params.page_size,\n            offset: params.current\n        }\n        setState({\n            ...state,\n            loading: true\n        })\n        APIGetKolPersona(params)\n            .then(resp => {\n                setState({\n                    ...state,\n                    visible: false,\n                    list: resp.data.page.records && getKeyList(resp.data.page.records),\n                    loading: false,\n                    search: params.search,\n                    pagination: {\n                        current: params.offset,\n                        pageSize: params.limit,\n                        total: resp.data.page.total\n                    }\n                })\n            })\n            .catch(err => {\n                console.log('err', err)\n            })\n    }\n\n    const handleChange = pagination => {\n        const params = {\n            ...state.search,\n            page_size: pagination.pageSize,\n            current: pagination.current,\n            search: state.search\n        }\n        getList(params)\n    }\n\n    const changeSearch = search => {\n        const params = { ...search, page_size: 10, current: 1, search: search }\n        setState({\n            ...state,\n            search: search\n        })\n        getList(params)\n    }\n\n    const exportRecord = () => {\n        APIexportRewardRecord()\n            .then(xhr => {\n                return\n            })\n            .catch((err, status, xhr) => {})\n    }\n\n    const createInvitecode = () => {\n        setState({\n            ...state,\n            formData: {},\n            visible: true\n        })\n    }\n    const onCreate = data => {\n        console.log('data', data)\n        APICreateInvitecode({\n            ReferralCodeJson: JSON.stringify(data)\n        })\n            .then(resp => {\n                message.success('success')\n                const params = { ...state.search }\n                // setState({\n                //     ...state,\n                //     visible: false\n                // })\n                getList(params)\n            })\n            .catch(err => {\n                console.log('err', err)\n            })\n    }\n\n    const onCreateDownload = values => {\n        console.log('values', values)\n\n        let params = {\n            ...values,\n            begin_date: values['begin_date'].format('YYYY-MM-DD HH:mm:ss'),\n            end_date: values['end_date'].format('YYYY-MM-DD HH:mm:ss')\n        }\n        APIDownloadInvitecode({\n            Referral_code_json: JSON.stringify(params)\n        }).then(res => {\n            message.success('success')\n            setState({\n                ...state,\n                dVisible: false\n            })\n        })\n    }\n\n    const createInvitecodeNew = () => {}\n\n    const batchCreateInvitecode = () => {}\n\n    const batchUploadFile = ({ file, onSuccess }) => {\n        APIBatchCreateInvitecode({ file, file }).then(resp => {\n            onSuccess()\n            const params = { start_row: 0, page_size: state.pagination.pageSize }\n            getList(params)\n        })\n    }\n\n    const downloadInvitecode = () => {\n        setState({\n            dVisible: true\n        })\n    }\n\n    const rowSelection = {\n        onChange: (selectedRowKeys, selectedRows) => {\n            console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\n        },\n        getCheckboxProps: record => ({\n            disabled: record.name === 'Disabled User',\n            name: record.name\n        })\n    }\n\n    const edit = data => {\n        console.log('edit', data)\n        let url = webhost + '/account/referral_user?user_id=' + data\n        let win = window.open(url, '_blank')\n        win.focus()\n    }\n\n    return (\n        <Layout className='animated fadeIn'>\n            <DownloadModal\n                visible={state.dVisible}\n                onCreate={onCreateDownload}\n                onCancel={() => {\n                    setState({ ...state, dVisible: false })\n                }}\n                formData={state.formData}\n            />\n\n            <DetailModal\n                visible={state.visible}\n                onCreate={onCreate}\n                onCancel={() => {\n                    setState({ ...state, visible: false })\n                }}\n                formData={state.formData}\n                disabled={state.disabled}\n            />\n            {/* <div>\n                <WebBreadcrumb arr={['Referral Management']} />\n            </div> */}\n            <div className='web-bread-c'>\n                <WebBreadcrumb arr={['Kol Persona']} />\n                <h3>Kol Persona</h3>\n                <img src={Aset} className='aset' />\n            </div>\n            <div className='base-wr'>\n                <div className='base-style'>\n                    <SearchBar changeSearch={changeSearch} loading={state.loading} />\n                </div>\n                <Row>\n                    <Col span={24}>\n                        <div className='base-style'>\n                            <Row>\n                                <Col span={24} style={{ textAlign: 'right', marginBottom: '15px' }}>\n                                    {/* <Button\n                                        icon={<CloudDownloadOutlined />}\n                                        style={{ marginLeft: '10px' }}\n                                        type='primary'\n                                        onClick={downloadInvitecode}>\n                                        Download Referral code\n                                    </Button>\n                                    <Button\n                                        style={{ marginRight: '10px', marginLeft: '10px' }}\n                                        type='primary'\n                                        onClick={() => {\n                                            createInvitecode()\n                                        }}>\n                                        + Generate Referral code\n                                    </Button>\n                                    <Upload customRequest={batchUploadFile}>\n                                        <Button type='primary'> + Generate a batch of Referral code</Button>\n                                    </Upload> */}\n                                </Col>\n                            </Row>\n                            <Table\n                                columns={columns(edit)}\n                                bordered\n                                rowKey={record => record.key}\n                                rowSelection={{\n                                    type: 'checkbox',\n                                    ...rowSelection\n                                }}\n                                scroll={{ scrollToFirstRowOnChange: true, x: 1000 }}\n                                dataSource={state.list}\n                                onChange={handleChange}\n                                loading={state.loading}\n                                pagination={state.pagination}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        </Layout>\n    )\n}\n\nexport default SearchTableView\n","import KolPersona from './KolPersona.jsx'\nexport default KolPersona\n","// This icon file is generated automatically.\nvar SearchOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z\" } }] }, \"name\": \"search\", \"theme\": \"outlined\" };\nexport default SearchOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SearchOutlinedSvg from \"@ant-design/icons-svg/es/asn/SearchOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SearchOutlined = function SearchOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: SearchOutlinedSvg\n  }));\n};\n\nSearchOutlined.displayName = 'SearchOutlined';\nexport default /*#__PURE__*/React.forwardRef(SearchOutlined);"],"sourceRoot":""}