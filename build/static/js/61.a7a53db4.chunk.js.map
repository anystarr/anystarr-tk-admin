{"version":3,"sources":["views/SampleApplicationReview/SampleApplicationReview.jsx","views/SampleApplicationReview/index.js"],"names":["Option","MonthPicker","RangePicker","formItemLayout","label","value","map","option","index","key","labelCol","xs","span","sm","wrapperCol","columns","edit","changeShow","confirm","title","dataIndex","width","align","render","text","item","onClick","id","Date","toLocaleString","SearchBar","props","useForm","form","name","className","onFinish","values","console","log","changeSearch","gutter","Item","style","textAlign","type","htmlType","margin","resetFields","DetailModal","visible","onCreate","onCancel","formData","disabled","useState","useEffect","Object","keys","length","setFieldsValue","okText","cancelText","onOk","validateFields","then","catch","info","rules","required","SearchTableView","list","pagination","current","pageSize","search","loading","state","setState","data","params","start_row","page_size","getList","APIGetSampleList","sampleOrderJson","JSON","stringify","resp","getKeyList","total","pager","err","is_show_app","APICreateOrModifySku","categoryJson","success","WebBreadcrumb","arr","url","webhost","window","open","focus","rowKey","record","dataSource","onChange","scroll","scrollToFirstRowOnChange","x","SampleApplicationReview"],"mappings":"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","file":"static/js/61.a7a53db4.chunk.js","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\nimport WebBreadcrumb from '@/components/WebBreadcrumb'\nimport {\n    Layout,\n    Row,\n    Col,\n    Tag,\n    Table,\n    Button,\n    Modal,\n    Input,\n    Popconfirm,\n    Form,\n    DatePicker,\n    Select,\n    message,\n    Switch\n} from 'antd'\nimport '@/style/view-style/table.less'\nimport {\n    APIgetList,\n    APIrewardApplicationList,\n    APIrewardApplicationHandle,\n    APIexportRewardRecord,\n    APIGetUserList,\n    APIGetInvitecodeList,\n    APICreateInvitecode,\n    APIGetCampaignsList,\n    APIFindTasks,\n    APIGetSkuList,\n    APICreateOrModifySku,\n    APIDeleteSku,\n    APIGetSampleList,\n    APIDownloadSample\n} from '@/mapi'\nimport { getKeyList } from '@/tools/action.js'\nimport { getLendTime, getLendTimeNew } from '@/tools/help.js'\nimport { render } from 'react-dom'\nimport { search } from '../../tools/host'\nimport webhost from '@/tools/webhost.js'\n\nconst { MonthPicker, RangePicker } = DatePicker\nconst { Option } = Select\n\nconst typeList = [\n    { label: '待处理', value: 'to_handle' },\n    { label: '已处理', value: 'handled' }\n]\n\nconst TypeOptions = typeList.map((option, index) => {\n    return (\n        <Option key={index} value={option.value}>\n            {option.label}\n        </Option>\n    )\n})\n\nconst getLocalTime = nS => {\n    return new Date(parseInt(nS) * 1000).toLocaleString().replace(/:\\d{1,2}$/, ' ')\n}\n\nconst formItemLayout = {\n    labelCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 8\n        }\n    },\n    wrapperCol: {\n        xs: {\n            span: 24\n        },\n        sm: {\n            span: 16\n        }\n    }\n}\n\nconst columns = (edit, changeShow, confirm) => [\n    {\n        title: 'Sample application ID',\n        dataIndex: 'id',\n        key: 'id',\n        width: '100',\n        align: 'center',\n        render: (text, item) => (\n            <div>\n                <a\n                    onClick={() => {\n                        edit(item)\n                    }}>\n                    {item.id}\n                </a>\n            </div>\n        )\n    },\n    {\n        title: 'Task ID',\n        dataIndex: 'task_id',\n        key: 'task_id',\n        align: 'center'\n    },\n    {\n        title: 'Campaign title',\n        dataIndex: 'title',\n        key: 'title',\n        width: '100',\n        align: 'center'\n    },\n    {\n        title: 'Update date',\n        dataIndex: 'update_time',\n        key: 'update_time',\n        width: '100',\n        align: 'center',\n        render: (text, item) => <div>{new Date(text).toLocaleString()}</div>\n    },\n    {\n        title: 'Username',\n        dataIndex: 'from_user',\n        key: 'from_user',\n        width: '100',\n        align: 'center'\n    },\n    {\n        title: 'Courier',\n        dataIndex: 'courier',\n        key: 'courier',\n        width: '100',\n        align: 'center'\n    },\n    {\n        title: 'Tracking number',\n        dataIndex: 'tracking_number',\n        key: 'tracking_number',\n        width: '100',\n        align: 'center'\n    },\n    {\n        title: 'Application status',\n        dataIndex: 'status',\n        key: 'status',\n        width: '100',\n        align: 'center',\n        render: (text, item) => <div>{text == 1 ? 'New application' : 'Shipped'}</div>\n    }\n]\n\nconst SearchBar = props => {\n    const [form] = Form.useForm()\n\n    const onFinish = values => {\n        console.log('values', values)\n        props.changeSearch(values)\n    }\n\n    return (\n        <Form\n            {...formItemLayout}\n            form={form}\n            name='advanced_search'\n            className='ant-advanced-search-form'\n            onFinish={onFinish}>\n            <Row gutter={24}>\n                <Col span={8}>\n                    <Form.Item name='id' label='ID'>\n                        <Input />\n                    </Form.Item>\n                </Col>\n                <Col span={8}>\n                    <Form.Item name='user_id' label='User ID'>\n                        <Input />\n                    </Form.Item>\n                </Col>\n                <Col span={8}>\n                    <Form.Item name='from_user' label='User Email'>\n                        <Input />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row gutter={24}>\n                <Col span={8}>\n                    <Form.Item name='tracking_number' label='Tracking Number'>\n                        <Input />\n                    </Form.Item>\n                    {/* <Form.Item name='is_show_app' label='Application status'>\n                        <Select allowClear>\n                            <Option value={1}>Yes</Option>\n                            <Option value={0}>No</Option>\n                        </Select>\n                    </Form.Item> */}\n                </Col>\n            </Row>\n            <Row>\n                <Col span={24} style={{ textAlign: 'right' }}>\n                    <Button type='primary' htmlType='submit'>\n                        Search\n                    </Button>\n                    <Button\n                        style={{ margin: '0 8px' }}\n                        onClick={() => {\n                            form.resetFields()\n                        }}>\n                        Reset\n                    </Button>\n                </Col>\n            </Row>\n        </Form>\n    )\n}\n\nconst DetailModal = ({ visible, onCreate, onCancel, formData, disabled }) => {\n    const [form] = Form.useForm()\n\n    const [user, setUser] = useState({})\n    const [allMemVisible, setAllMemVisible] = useState(false)\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 14 }\n    }\n    const rangeConfig = {\n        rules: [\n            {\n                type: 'array',\n                message: 'Please select time!'\n            }\n        ]\n    }\n\n    useEffect(() => {\n        console.log('formdata', formData)\n        if (Object.keys(formData).length) {\n            form.setFieldsValue(formData)\n        } else {\n            form.resetFields()\n        }\n    }, [formData])\n\n    const onGenderChange = value => {\n        form.setFieldsValue({ Gender: value })\n    }\n\n    const onCreateNew = val => {\n        setUser(val)\n        setAllMemVisible(false)\n        form.setFieldsValue({\n            user_id: val.user_id\n        })\n    }\n\n    return (\n        <Modal\n            visible={visible}\n            title='sku'\n            okText='Submit'\n            cancelText='Cancel'\n            onCancel={onCancel}\n            onOk={() => {\n                form.validateFields()\n                    .then(values => {\n                        form.resetFields()\n                        onCreate(values)\n                    })\n                    .catch(info => {\n                        console.log('Validate Failed:', info)\n                    })\n            }}>\n            <Form {...layout} form={form} name='form_in_modal'>\n                <Form.Item name='id' label='ID'>\n                    <Input disabled />\n                </Form.Item>\n                <Form.Item name='tier_1_cat' label='Tier1 Cat' rules={[{ required: true }]}>\n                    <Input />\n                </Form.Item>\n                <Form.Item name='tier_2_cat' label='Tier2 Cat'>\n                    <Input />\n                </Form.Item>\n                <Form.Item name='tier_3_cat' label='Tier3 Cat'>\n                    <Input />\n                </Form.Item>\n                <Form.Item name='shown_name' label='Sku name' rules={[{ required: true }]}>\n                    <Input />\n                </Form.Item>\n            </Form>\n        </Modal>\n    )\n}\n\nconst SearchTableView = props => {\n    const [state, setState] = useState({\n        list: [],\n        pagination: {\n            current: 1,\n            pageSize: 10\n        },\n        search: {},\n        loading: true,\n        visible: false,\n        disabled: false,\n        formData: {}\n    })\n    const [handleState, setHandleState] = useState({\n        visible: false,\n        data: {}\n    })\n    useEffect(() => {\n        const { pagination } = state\n        const params = { start_row: 0, page_size: state.pagination.pageSize }\n        getList(params)\n    }, [])\n\n    const getList = params => {\n        const { pagination, search } = state\n        console.log('paramslist', params)\n        APIGetSampleList({ sampleOrderJson: JSON.stringify(params) })\n            .then(resp => {\n                setState({\n                    ...state,\n                    visible: false,\n                    list: resp.data.list && getKeyList(resp.data.list),\n                    loading: false,\n                    search: params.search,\n                    pagination: {\n                        total: resp.data.pager.total,\n                        current: params.start_row / params.page_size + 1,\n                        pageSize: params.page_size\n                    }\n                })\n            })\n            .catch(err => {\n                console.log('err', err)\n            })\n    }\n\n    const handleChange = pagination => {\n        console.log('state', state)\n\n        const params = {\n            ...state.search,\n            page_size: pagination.pageSize,\n            start_row: pagination.pageSize * (pagination.current - 1),\n            search: state.search\n        }\n\n        console.log('ttt', params)\n\n        getList(params)\n    }\n\n    const changeSearch = search => {\n        console.log('search11', search)\n        console.log('statte', state)\n        const params = { ...search, page_size: 10, start_row: 0, search: search }\n        console.log('searchparams', params)\n        getList(params)\n        setState({\n            ...state,\n            search: search\n        })\n    }\n\n    const exportRecord = () => {\n        APIexportRewardRecord()\n            .then(xhr => {\n                return\n            })\n            .catch((err, status, xhr) => {})\n    }\n\n    const onCreate = data => {\n        console.log('data', data)\n        data.is_show_app = 1\n        APICreateOrModifySku({\n            categoryJson: JSON.stringify(data)\n        })\n            .then(resp => {\n                message.success('success')\n                const params = { ...state.search, start_row: 0, page_size: 10 }\n                getList(params)\n            })\n            .catch(err => {\n                console.log('err', err)\n            })\n    }\n\n    const createSku = data => {\n        setState({\n            ...state,\n            visible: true,\n            formData: {}\n        })\n    }\n\n    const edit = data => {\n        let url = webhost + '/sample_detail/' + data.id\n        let win = window.open(url, '_blank')\n        win.focus()\n    }\n\n    const confirm = data => {\n        console.log('dataconfirm', data)\n        APIDeleteSku({ id: data.id }).then(resp => {\n            const { pagination } = state\n            const params = { start_row: 0, page_size: state.pagination.pageSize }\n            getList(params)\n        })\n    }\n\n    const changeShow = data => {\n        console.log('data', data)\n        APICreateOrModifySku({\n            categoryJson: JSON.stringify({\n                id: data.id,\n                tier_1_cat: data.tier_1_cat,\n                shown_name: data.shown_name,\n                is_show_app: data.is_show_app == 1 ? 0 : 1\n            })\n        })\n            .then(resp => {\n                const params = {\n                    ...state.search,\n                    page_size: state.pagination.pageSize,\n                    start_row: state.pagination.pageSize * (state.pagination.current - 1),\n                    search: state.search\n                }\n                getList(params)\n            })\n            .catch(err => {\n                console.log('err', err)\n            })\n    }\n\n    const downloadSample = () => {\n        // APIDownloadSample({\n        //     sampleOrderJson:JSON.stringify({\n        //         ...search\n        //     })\n        // }).then(res=> {\n\n        // })\n        let apiHref = APIDownloadSample()\n        let json = JSON.stringify({ ...state.search })\n        let resHref = `${apiHref}?sampleOrderJson=${json}`\n        return encodeURI(resHref)\n    }\n\n    return (\n        <Layout className='animated fadeIn'>\n            <DetailModal\n                visible={state.visible}\n                onCreate={onCreate}\n                onCancel={() => {\n                    setState({ ...state, visible: false })\n                }}\n                formData={state.formData}\n                disabled={state.disabled}\n            />\n            <div>\n                <WebBreadcrumb arr={['Sample application management']} />\n            </div>\n            <div className='base-style'>\n                <SearchBar changeSearch={changeSearch} />\n            </div>\n            <Row>\n                <Col span={24}>\n                    <div className='base-style'>\n                        <Table\n                            columns={columns(edit, changeShow, confirm)}\n                            rowKey={record => record.key}\n                            dataSource={state.list}\n                            onChange={handleChange}\n                            loading={state.loading}\n                            pagination={state.pagination}\n                            scroll={{ scrollToFirstRowOnChange: true, x: 1000 }}\n                        />\n                    </div>\n                </Col>\n            </Row>\n        </Layout>\n    )\n}\n\nexport default SearchTableView\n","import SampleApplicationReview from './SampleApplicationReview.jsx'\nexport default SampleApplicationReview\n"],"sourceRoot":""}